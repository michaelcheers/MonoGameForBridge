Bridge.assembly("MonoGameForBridge",function(){"use strict";var $m=Bridge.setMetadata,$n=[Microsoft.Xna.Framework,System,System.Collections.Generic,Microsoft.Xna.Framework.Content,Microsoft.Xna.Framework.Graphics,Bridge.WebGL,System.Threading.Tasks,Microsoft.Xna.Framework.Input,MonoGameForBridge];$m($n[0].BoundingBox,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[0].Vector3],pi:[{n:"min",pt:$n[0].Vector3,ps:0},{n:"max",pt:$n[0].Vector3,ps:1}],sn:"$ctor1"},{a:2,n:"Contains",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Contains",rt:$n[0].ContainmentType,p:[$n[0].BoundingBox]},{a:2,n:"Contains",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Contains$1",rt:$n[0].ContainmentType,p:[$n[0].BoundingFrustum]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Contains$2",rt:$n[0].ContainmentType,p:[$n[0].BoundingSphere]},{a:2,n:"Contains",t:8,pi:[{n:"point",pt:$n[0].Vector3,ps:0}],sn:"Contains$3",rt:$n[0].ContainmentType,p:[$n[0].Vector3]},{a:2,n:"Contains",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$4",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$5",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$6",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].ContainmentType]},{a:2,n:"CreateFromPoints",is:!0,t:8,pi:[{n:"points",pt:$n[2].IEnumerable$1(Microsoft.Xna.Framework.Vector3),ps:0}],sn:"CreateFromPoints",rt:$n[0].BoundingBox,p:[$n[2].IEnumerable$1(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"CreateFromSphere",is:!0,t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"CreateFromSphere",rt:$n[0].BoundingBox,p:[$n[0].BoundingSphere]},{a:2,n:"CreateFromSphere",is:!0,t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[0].BoundingBox,ps:1}],sn:"CreateFromSphere$1",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].BoundingBox]},{a:2,n:"CreateMerged",is:!0,t:8,pi:[{n:"original",pt:$n[0].BoundingBox,ps:0},{n:"additional",pt:$n[0].BoundingBox,ps:1}],sn:"CreateMerged",rt:$n[0].BoundingBox,p:[$n[0].BoundingBox,$n[0].BoundingBox]},{a:2,n:"CreateMerged",is:!0,t:8,pi:[{n:"original",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"additional",ref:!0,pt:$n[0].BoundingBox,ps:1},{n:"result",out:!0,pt:$n[0].BoundingBox,ps:2}],sn:"CreateMerged$1",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].BoundingBox,$n[0].BoundingBox]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].BoundingBox,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].BoundingBox]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{a:2,n:"GetCorners",t:8,sn:"GetCorners",rt:System.Array.type(Microsoft.Xna.Framework.Vector3)},{a:2,n:"GetCorners",t:8,pi:[{n:"corners",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0}],sn:"GetCorners$1",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3)]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Intersects",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Intersects$1",rt:$n[1].Boolean,p:[$n[0].BoundingBox]},{a:2,n:"Intersects",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Intersects$2",rt:$n[1].Boolean,p:[$n[0].BoundingFrustum]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Intersects$3",rt:$n[1].Boolean,p:[$n[0].BoundingSphere]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0}],sn:"Intersects",rt:$n[0].PlaneIntersectionType,p:[$n[0].Plane]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",pt:$n[0].Ray,ps:0}],sn:"Intersects$4",rt:$n[1].Nullable$1(System.Single),p:[$n[0].Ray]},{a:2,n:"Intersects",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$5",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$6",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[0].PlaneIntersectionType,ps:1}],sn:"Intersects$7",rt:$n[1].Void,p:[$n[0].Plane,$n[0].PlaneIntersectionType]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",ref:!0,pt:$n[0].Ray,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$8",rt:$n[1].Void,p:[$n[0].Ray,$n[1].Nullable$1(System.Single)]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingBox,ps:0},{n:"b",pt:$n[0].BoundingBox,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].BoundingBox,$n[0].BoundingBox]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingBox,ps:0},{n:"b",pt:$n[0].BoundingBox,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].BoundingBox,$n[0].BoundingBox]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"CornerCount",is:!0,t:4,rt:$n[1].Int32,sn:"CornerCount"},{a:2,n:"Max",t:4,rt:$n[0].Vector3,sn:"Max"},{a:1,n:"MaxVector3",is:!0,t:4,rt:$n[0].Vector3,sn:"MaxVector3",ro:!0},{a:2,n:"Min",t:4,rt:$n[0].Vector3,sn:"Min"},{a:1,n:"MinVector3",is:!0,t:4,rt:$n[0].Vector3,sn:"MinVector3",ro:!0}]}});$m($n[0].BoundingFrustum,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].Matrix],pi:[{n:"value",pt:$n[0].Matrix,ps:0}],sn:"ctor"},{a:2,n:"Contains",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Contains",rt:$n[0].ContainmentType,p:[$n[0].BoundingBox]},{a:2,n:"Contains",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Contains$1",rt:$n[0].ContainmentType,p:[$n[0].BoundingFrustum]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Contains$2",rt:$n[0].ContainmentType,p:[$n[0].BoundingSphere]},{a:2,n:"Contains",t:8,pi:[{n:"point",pt:$n[0].Vector3,ps:0}],sn:"Contains$3",rt:$n[0].ContainmentType,p:[$n[0].Vector3]},{a:2,n:"Contains",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$4",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$5",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$6",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].ContainmentType]},{a:1,n:"CreateCorners",t:8,sn:"CreateCorners",rt:$n[1].Void},{a:1,n:"CreatePlanes",t:8,sn:"CreatePlanes",rt:$n[1].Void},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].BoundingFrustum,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].BoundingFrustum]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{a:2,n:"GetCorners",t:8,sn:"GetCorners",rt:System.Array.type(Microsoft.Xna.Framework.Vector3)},{a:2,n:"GetCorners",t:8,pi:[{n:"corners",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0}],sn:"GetCorners$1",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3)]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:1,n:"IntersectionPoint",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[0].Plane,ps:0},{n:"b",ref:!0,pt:$n[0].Plane,ps:1},{n:"c",ref:!0,pt:$n[0].Plane,ps:2},{n:"result",out:!0,pt:$n[0].Vector3,ps:3}],sn:"IntersectionPoint",rt:$n[1].Void,p:[$n[0].Plane,$n[0].Plane,$n[0].Plane,$n[0].Vector3]},{a:2,n:"Intersects",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Intersects$1",rt:$n[1].Boolean,p:[$n[0].BoundingBox]},{a:2,n:"Intersects",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Intersects$2",rt:$n[1].Boolean,p:[$n[0].BoundingFrustum]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Intersects$3",rt:$n[1].Boolean,p:[$n[0].BoundingSphere]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0}],sn:"Intersects",rt:$n[0].PlaneIntersectionType,p:[$n[0].Plane]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",pt:$n[0].Ray,ps:0}],sn:"Intersects$4",rt:$n[1].Nullable$1(System.Single),p:[$n[0].Ray]},{a:2,n:"Intersects",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$5",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$6",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[0].PlaneIntersectionType,ps:1}],sn:"Intersects$7",rt:$n[1].Void,p:[$n[0].Plane,$n[0].PlaneIntersectionType]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",ref:!0,pt:$n[0].Ray,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$8",rt:$n[1].Void,p:[$n[0].Ray,$n[1].Nullable$1(System.Single)]},{a:1,n:"NormalizePlane",t:8,pi:[{n:"p",ref:!0,pt:$n[0].Plane,ps:0}],sn:"NormalizePlane",rt:$n[1].Void,p:[$n[0].Plane]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingFrustum,ps:0},{n:"b",pt:$n[0].BoundingFrustum,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].BoundingFrustum,$n[0].BoundingFrustum]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingFrustum,ps:0},{n:"b",pt:$n[0].BoundingFrustum,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].BoundingFrustum,$n[0].BoundingFrustum]},{a:2,n:"Bottom",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Bottom",t:8,rt:$n[0].Plane,fg:"Bottom"},fn:"Bottom"},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Far",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Far",t:8,rt:$n[0].Plane,fg:"Far"},fn:"Far"},{a:2,n:"Left",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Left",t:8,rt:$n[0].Plane,fg:"Left"},fn:"Left"},{a:2,n:"Matrix",t:16,rt:$n[0].Matrix,g:{a:2,n:"get_Matrix",t:8,rt:$n[0].Matrix,fg:"Matrix"},s:{a:2,n:"set_Matrix",t:8,p:[$n[0].Matrix],rt:$n[1].Void,fs:"Matrix"},fn:"Matrix"},{a:2,n:"Near",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Near",t:8,rt:$n[0].Plane,fg:"Near"},fn:"Near"},{a:2,n:"Right",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Right",t:8,rt:$n[0].Plane,fg:"Right"},fn:"Right"},{a:2,n:"Top",t:16,rt:$n[0].Plane,g:{a:2,n:"get_Top",t:8,rt:$n[0].Plane,fg:"Top"},fn:"Top"},{a:2,n:"CornerCount",is:!0,t:4,rt:$n[1].Int32,sn:"CornerCount"},{a:2,n:"PlaneCount",is:!0,t:4,rt:$n[1].Int32,sn:"PlaneCount"},{a:1,n:"_corners",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Vector3),sn:"_corners",ro:!0},{a:1,n:"_matrix",t:4,rt:$n[0].Matrix,sn:"_matrix"},{a:1,n:"_planes",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Plane),sn:"_planes",ro:!0}]}});$m($n[0].BoundingSphere,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[1].Single],pi:[{n:"center",pt:$n[0].Vector3,ps:0},{n:"radius",pt:$n[1].Single,ps:1}],sn:"$ctor1"},{a:2,n:"Contains",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Contains",rt:$n[0].ContainmentType,p:[$n[0].BoundingBox]},{a:2,n:"Contains",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Contains$1",rt:$n[0].ContainmentType,p:[$n[0].BoundingFrustum]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Contains$2",rt:$n[0].ContainmentType,p:[$n[0].BoundingSphere]},{a:2,n:"Contains",t:8,pi:[{n:"point",pt:$n[0].Vector3,ps:0}],sn:"Contains$3",rt:$n[0].ContainmentType,p:[$n[0].Vector3]},{a:2,n:"Contains",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$4",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"frustum",ref:!0,pt:$n[0].BoundingFrustum,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$5",rt:$n[1].Void,p:[$n[0].BoundingFrustum,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$6",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].ContainmentType]},{a:2,n:"Contains",t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].ContainmentType,ps:1}],sn:"Contains$7",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].ContainmentType]},{a:2,n:"CreateFromBoundingBox",is:!0,t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"CreateFromBoundingBox",rt:$n[0].BoundingSphere,p:[$n[0].BoundingBox]},{a:2,n:"CreateFromBoundingBox",is:!0,t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[0].BoundingSphere,ps:1}],sn:"CreateFromBoundingBox$1",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].BoundingSphere]},{a:2,n:"CreateFromFrustum",is:!0,t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"CreateFromFrustum",rt:$n[0].BoundingSphere,p:[$n[0].BoundingFrustum]},{a:2,n:"CreateFromPoints",is:!0,t:8,pi:[{n:"points",pt:$n[2].IEnumerable$1(Microsoft.Xna.Framework.Vector3),ps:0}],sn:"CreateFromPoints",rt:$n[0].BoundingSphere,p:[$n[2].IEnumerable$1(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"CreateMerged",is:!0,t:8,pi:[{n:"original",pt:$n[0].BoundingSphere,ps:0},{n:"additional",pt:$n[0].BoundingSphere,ps:1}],sn:"CreateMerged",rt:$n[0].BoundingSphere,p:[$n[0].BoundingSphere,$n[0].BoundingSphere]},{a:2,n:"CreateMerged",is:!0,t:8,pi:[{n:"original",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"additional",ref:!0,pt:$n[0].BoundingSphere,ps:1},{n:"result",out:!0,pt:$n[0].BoundingSphere,ps:2}],sn:"CreateMerged$1",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].BoundingSphere,$n[0].BoundingSphere]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].BoundingSphere,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].BoundingSphere]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Intersects",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Intersects$1",rt:$n[1].Boolean,p:[$n[0].BoundingBox]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Intersects$2",rt:$n[1].Boolean,p:[$n[0].BoundingSphere]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0}],sn:"Intersects",rt:$n[0].PlaneIntersectionType,p:[$n[0].Plane]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",pt:$n[0].Ray,ps:0}],sn:"Intersects$3",rt:$n[1].Nullable$1(System.Single),p:[$n[0].Ray]},{a:2,n:"Intersects",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$4",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$5",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[1].Boolean]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[0].PlaneIntersectionType,ps:1}],sn:"Intersects$6",rt:$n[1].Void,p:[$n[0].Plane,$n[0].PlaneIntersectionType]},{a:2,n:"Intersects",t:8,pi:[{n:"ray",ref:!0,pt:$n[0].Ray,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$7",rt:$n[1].Void,p:[$n[0].Ray,$n[1].Nullable$1(System.Single)]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transform",t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"Transform",rt:$n[0].BoundingSphere,p:[$n[0].Matrix]},{a:2,n:"Transform",t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"result",out:!0,pt:$n[0].BoundingSphere,ps:1}],sn:"Transform$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].BoundingSphere]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingSphere,ps:0},{n:"b",pt:$n[0].BoundingSphere,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].BoundingSphere,$n[0].BoundingSphere]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].BoundingSphere,ps:0},{n:"b",pt:$n[0].BoundingSphere,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].BoundingSphere,$n[0].BoundingSphere]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Center",t:4,rt:$n[0].Vector3,sn:"Center"},{a:2,n:"Radius",t:4,rt:$n[1].Single,sn:"Radius"}]}});$m($n[0].Color,function(){return{att:265,a:2,m:[{n:".cctor",t:1,sn:"ctor",sm:!0},{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3],pi:[{n:"color",pt:$n[0].Vector3,ps:0}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[0].Vector4],pi:[{n:"color",pt:$n[0].Vector4,ps:0}],sn:"$ctor4"},{a:2,n:".ctor",t:1,p:[$n[1].UInt32],pi:[{n:"packedValue",pt:$n[1].UInt32,ps:0}],sn:"$ctor10"},{a:2,n:".ctor",t:1,p:[$n[0].Color,$n[1].Int32],pi:[{n:"color",pt:$n[0].Color,ps:0},{n:"alpha",pt:$n[1].Int32,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[0].Color,$n[1].Single],pi:[{n:"color",pt:$n[0].Color,ps:0},{n:"alpha",pt:$n[1].Single,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[1].Int32,$n[1].Int32,$n[1].Int32],pi:[{n:"r",pt:$n[1].Int32,ps:0},{n:"g",pt:$n[1].Int32,ps:1},{n:"b",pt:$n[1].Int32,ps:2}],sn:"$ctor6"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"r",pt:$n[1].Single,ps:0},{n:"g",pt:$n[1].Single,ps:1},{n:"b",pt:$n[1].Single,ps:2}],sn:"$ctor8"},{a:2,n:".ctor",t:1,p:[$n[1].Byte,$n[1].Byte,$n[1].Byte,$n[1].Byte],pi:[{n:"r",pt:$n[1].Byte,ps:0},{n:"g",pt:$n[1].Byte,ps:1},{n:"b",pt:$n[1].Byte,ps:2},{n:"alpha",pt:$n[1].Byte,ps:3}],sn:"$ctor5"},{a:2,n:".ctor",t:1,p:[$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[1].Int32],pi:[{n:"r",pt:$n[1].Int32,ps:0},{n:"g",pt:$n[1].Int32,ps:1},{n:"b",pt:$n[1].Int32,ps:2},{n:"alpha",pt:$n[1].Int32,ps:3}],sn:"$ctor7"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"r",pt:$n[1].Single,ps:0},{n:"g",pt:$n[1].Single,ps:1},{n:"b",pt:$n[1].Single,ps:2},{n:"alpha",pt:$n[1].Single,ps:3}],sn:"$ctor9"},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Color,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Color]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{a:2,n:"FromNonPremultiplied",is:!0,t:8,pi:[{n:"vector",pt:$n[0].Vector4,ps:0}],sn:"FromNonPremultiplied",rt:$n[0].Color,p:[$n[0].Vector4]},{a:2,n:"FromNonPremultiplied",is:!0,t:8,pi:[{n:"r",pt:$n[1].Int32,ps:0},{n:"g",pt:$n[1].Int32,ps:1},{n:"b",pt:$n[1].Int32,ps:2},{n:"a",pt:$n[1].Int32,ps:3}],sn:"FromNonPremultiplied$1",rt:$n[0].Color,p:[$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[1].Int32]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Color,ps:0},{n:"value2",pt:$n[0].Color,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Color,p:[$n[0].Color,$n[0].Color,$n[1].Single]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Color,ps:0},{n:"value2",pt:$n[0].Color,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"LerpPrecise",rt:$n[0].Color,p:[$n[0].Color,$n[0].Color,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value",pt:$n[0].Color,ps:0},{n:"scale",pt:$n[1].Single,ps:1}],sn:"Multiply",rt:$n[0].Color,p:[$n[0].Color,$n[1].Single]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"ToVector3",t:8,sn:"ToVector3",rt:$n[0].Vector3},{a:2,n:"ToVector4",t:8,sn:"ToVector4",rt:$n[0].Vector4},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Color,ps:0},{n:"b",pt:$n[0].Color,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Color,$n[0].Color]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Color,ps:0},{n:"b",pt:$n[0].Color,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Color,$n[0].Color]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value",pt:$n[0].Color,ps:0},{n:"scale",pt:$n[1].Single,ps:1}],sn:"op_Multiply",rt:$n[0].Color,p:[$n[0].Color,$n[1].Single]},{a:2,n:"A",t:16,rt:$n[1].Byte,g:{a:2,n:"get_A",t:8,rt:$n[1].Byte,fg:"A"},s:{a:2,n:"set_A",t:8,p:[$n[1].Byte],rt:$n[1].Void,fs:"A"},fn:"A"},{a:2,n:"AliceBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_AliceBlue",t:8,rt:$n[0].Color,fg:"AliceBlue",is:!0},s:{a:1,n:"set_AliceBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"AliceBlue",is:!0},fn:"AliceBlue"},{a:2,n:"AntiqueWhite",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_AntiqueWhite",t:8,rt:$n[0].Color,fg:"AntiqueWhite",is:!0},s:{a:1,n:"set_AntiqueWhite",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"AntiqueWhite",is:!0},fn:"AntiqueWhite"},{a:2,n:"Aqua",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Aqua",t:8,rt:$n[0].Color,fg:"Aqua",is:!0},s:{a:1,n:"set_Aqua",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Aqua",is:!0},fn:"Aqua"},{a:2,n:"Aquamarine",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Aquamarine",t:8,rt:$n[0].Color,fg:"Aquamarine",is:!0},s:{a:1,n:"set_Aquamarine",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Aquamarine",is:!0},fn:"Aquamarine"},{a:2,n:"Azure",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Azure",t:8,rt:$n[0].Color,fg:"Azure",is:!0},s:{a:1,n:"set_Azure",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Azure",is:!0},fn:"Azure"},{a:2,n:"B",t:16,rt:$n[1].Byte,g:{a:2,n:"get_B",t:8,rt:$n[1].Byte,fg:"B"},s:{a:2,n:"set_B",t:8,p:[$n[1].Byte],rt:$n[1].Void,fs:"B"},fn:"B"},{a:2,n:"Beige",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Beige",t:8,rt:$n[0].Color,fg:"Beige",is:!0},s:{a:1,n:"set_Beige",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Beige",is:!0},fn:"Beige"},{a:2,n:"Bisque",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Bisque",t:8,rt:$n[0].Color,fg:"Bisque",is:!0},s:{a:1,n:"set_Bisque",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Bisque",is:!0},fn:"Bisque"},{a:2,n:"Black",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Black",t:8,rt:$n[0].Color,fg:"Black",is:!0},s:{a:1,n:"set_Black",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Black",is:!0},fn:"Black"},{a:2,n:"BlanchedAlmond",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_BlanchedAlmond",t:8,rt:$n[0].Color,fg:"BlanchedAlmond",is:!0},s:{a:1,n:"set_BlanchedAlmond",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"BlanchedAlmond",is:!0},fn:"BlanchedAlmond"},{a:2,n:"Blue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Blue",t:8,rt:$n[0].Color,fg:"Blue",is:!0},s:{a:1,n:"set_Blue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Blue",is:!0},fn:"Blue"},{a:2,n:"BlueViolet",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_BlueViolet",t:8,rt:$n[0].Color,fg:"BlueViolet",is:!0},s:{a:1,n:"set_BlueViolet",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"BlueViolet",is:!0},fn:"BlueViolet"},{a:2,n:"Brown",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Brown",t:8,rt:$n[0].Color,fg:"Brown",is:!0},s:{a:1,n:"set_Brown",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Brown",is:!0},fn:"Brown"},{a:2,n:"BurlyWood",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_BurlyWood",t:8,rt:$n[0].Color,fg:"BurlyWood",is:!0},s:{a:1,n:"set_BurlyWood",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"BurlyWood",is:!0},fn:"BurlyWood"},{a:2,n:"CadetBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_CadetBlue",t:8,rt:$n[0].Color,fg:"CadetBlue",is:!0},s:{a:1,n:"set_CadetBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"CadetBlue",is:!0},fn:"CadetBlue"},{a:2,n:"Chartreuse",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Chartreuse",t:8,rt:$n[0].Color,fg:"Chartreuse",is:!0},s:{a:1,n:"set_Chartreuse",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Chartreuse",is:!0},fn:"Chartreuse"},{a:2,n:"Chocolate",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Chocolate",t:8,rt:$n[0].Color,fg:"Chocolate",is:!0},s:{a:1,n:"set_Chocolate",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Chocolate",is:!0},fn:"Chocolate"},{a:2,n:"Coral",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Coral",t:8,rt:$n[0].Color,fg:"Coral",is:!0},s:{a:1,n:"set_Coral",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Coral",is:!0},fn:"Coral"},{a:2,n:"CornflowerBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_CornflowerBlue",t:8,rt:$n[0].Color,fg:"CornflowerBlue",is:!0},s:{a:1,n:"set_CornflowerBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"CornflowerBlue",is:!0},fn:"CornflowerBlue"},{a:2,n:"Cornsilk",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Cornsilk",t:8,rt:$n[0].Color,fg:"Cornsilk",is:!0},s:{a:1,n:"set_Cornsilk",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Cornsilk",is:!0},fn:"Cornsilk"},{a:2,n:"Crimson",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Crimson",t:8,rt:$n[0].Color,fg:"Crimson",is:!0},s:{a:1,n:"set_Crimson",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Crimson",is:!0},fn:"Crimson"},{a:2,n:"Cyan",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Cyan",t:8,rt:$n[0].Color,fg:"Cyan",is:!0},s:{a:1,n:"set_Cyan",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Cyan",is:!0},fn:"Cyan"},{a:2,n:"DarkBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkBlue",t:8,rt:$n[0].Color,fg:"DarkBlue",is:!0},s:{a:1,n:"set_DarkBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkBlue",is:!0},fn:"DarkBlue"},{a:2,n:"DarkCyan",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkCyan",t:8,rt:$n[0].Color,fg:"DarkCyan",is:!0},s:{a:1,n:"set_DarkCyan",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkCyan",is:!0},fn:"DarkCyan"},{a:2,n:"DarkGoldenrod",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkGoldenrod",t:8,rt:$n[0].Color,fg:"DarkGoldenrod",is:!0},s:{a:1,n:"set_DarkGoldenrod",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkGoldenrod",is:!0},fn:"DarkGoldenrod"},{a:2,n:"DarkGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkGray",t:8,rt:$n[0].Color,fg:"DarkGray",is:!0},s:{a:1,n:"set_DarkGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkGray",is:!0},fn:"DarkGray"},{a:2,n:"DarkGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkGreen",t:8,rt:$n[0].Color,fg:"DarkGreen",is:!0},s:{a:1,n:"set_DarkGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkGreen",is:!0},fn:"DarkGreen"},{a:2,n:"DarkKhaki",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkKhaki",t:8,rt:$n[0].Color,fg:"DarkKhaki",is:!0},s:{a:1,n:"set_DarkKhaki",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkKhaki",is:!0},fn:"DarkKhaki"},{a:2,n:"DarkMagenta",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkMagenta",t:8,rt:$n[0].Color,fg:"DarkMagenta",is:!0},s:{a:1,n:"set_DarkMagenta",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkMagenta",is:!0},fn:"DarkMagenta"},{a:2,n:"DarkOliveGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkOliveGreen",t:8,rt:$n[0].Color,fg:"DarkOliveGreen",is:!0},s:{a:1,n:"set_DarkOliveGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkOliveGreen",is:!0},fn:"DarkOliveGreen"},{a:2,n:"DarkOrange",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkOrange",t:8,rt:$n[0].Color,fg:"DarkOrange",is:!0},s:{a:1,n:"set_DarkOrange",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkOrange",is:!0},fn:"DarkOrange"},{a:2,n:"DarkOrchid",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkOrchid",t:8,rt:$n[0].Color,fg:"DarkOrchid",is:!0},s:{a:1,n:"set_DarkOrchid",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkOrchid",is:!0},fn:"DarkOrchid"},{a:2,n:"DarkRed",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkRed",t:8,rt:$n[0].Color,fg:"DarkRed",is:!0},s:{a:1,n:"set_DarkRed",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkRed",is:!0},fn:"DarkRed"},{a:2,n:"DarkSalmon",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkSalmon",t:8,rt:$n[0].Color,fg:"DarkSalmon",is:!0},s:{a:1,n:"set_DarkSalmon",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkSalmon",is:!0},fn:"DarkSalmon"},{a:2,n:"DarkSeaGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkSeaGreen",t:8,rt:$n[0].Color,fg:"DarkSeaGreen",is:!0},s:{a:1,n:"set_DarkSeaGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkSeaGreen",is:!0},fn:"DarkSeaGreen"},{a:2,n:"DarkSlateBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkSlateBlue",t:8,rt:$n[0].Color,fg:"DarkSlateBlue",is:!0},s:{a:1,n:"set_DarkSlateBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkSlateBlue",is:!0},fn:"DarkSlateBlue"},{a:2,n:"DarkSlateGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkSlateGray",t:8,rt:$n[0].Color,fg:"DarkSlateGray",is:!0},s:{a:1,n:"set_DarkSlateGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkSlateGray",is:!0},fn:"DarkSlateGray"},{a:2,n:"DarkTurquoise",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkTurquoise",t:8,rt:$n[0].Color,fg:"DarkTurquoise",is:!0},s:{a:1,n:"set_DarkTurquoise",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkTurquoise",is:!0},fn:"DarkTurquoise"},{a:2,n:"DarkViolet",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DarkViolet",t:8,rt:$n[0].Color,fg:"DarkViolet",is:!0},s:{a:1,n:"set_DarkViolet",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DarkViolet",is:!0},fn:"DarkViolet"},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"DeepPink",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DeepPink",t:8,rt:$n[0].Color,fg:"DeepPink",is:!0},s:{a:1,n:"set_DeepPink",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DeepPink",is:!0},fn:"DeepPink"},{a:2,n:"DeepSkyBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DeepSkyBlue",t:8,rt:$n[0].Color,fg:"DeepSkyBlue",is:!0},s:{a:1,n:"set_DeepSkyBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DeepSkyBlue",is:!0},fn:"DeepSkyBlue"},{a:2,n:"DimGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DimGray",t:8,rt:$n[0].Color,fg:"DimGray",is:!0},s:{a:1,n:"set_DimGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DimGray",is:!0},fn:"DimGray"},{a:2,n:"DodgerBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_DodgerBlue",t:8,rt:$n[0].Color,fg:"DodgerBlue",is:!0},s:{a:1,n:"set_DodgerBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"DodgerBlue",is:!0},fn:"DodgerBlue"},{a:2,n:"Firebrick",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Firebrick",t:8,rt:$n[0].Color,fg:"Firebrick",is:!0},s:{a:1,n:"set_Firebrick",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Firebrick",is:!0},fn:"Firebrick"},{a:2,n:"FloralWhite",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_FloralWhite",t:8,rt:$n[0].Color,fg:"FloralWhite",is:!0},s:{a:1,n:"set_FloralWhite",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"FloralWhite",is:!0},fn:"FloralWhite"},{a:2,n:"ForestGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_ForestGreen",t:8,rt:$n[0].Color,fg:"ForestGreen",is:!0},s:{a:1,n:"set_ForestGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"ForestGreen",is:!0},fn:"ForestGreen"},{a:2,n:"Fuchsia",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Fuchsia",t:8,rt:$n[0].Color,fg:"Fuchsia",is:!0},s:{a:1,n:"set_Fuchsia",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Fuchsia",is:!0},fn:"Fuchsia"},{a:2,n:"G",t:16,rt:$n[1].Byte,g:{a:2,n:"get_G",t:8,rt:$n[1].Byte,fg:"G"},s:{a:2,n:"set_G",t:8,p:[$n[1].Byte],rt:$n[1].Void,fs:"G"},fn:"G"},{a:2,n:"Gainsboro",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Gainsboro",t:8,rt:$n[0].Color,fg:"Gainsboro",is:!0},s:{a:1,n:"set_Gainsboro",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Gainsboro",is:!0},fn:"Gainsboro"},{a:2,n:"GhostWhite",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_GhostWhite",t:8,rt:$n[0].Color,fg:"GhostWhite",is:!0},s:{a:1,n:"set_GhostWhite",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"GhostWhite",is:!0},fn:"GhostWhite"},{a:2,n:"Gold",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Gold",t:8,rt:$n[0].Color,fg:"Gold",is:!0},s:{a:1,n:"set_Gold",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Gold",is:!0},fn:"Gold"},{a:2,n:"Goldenrod",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Goldenrod",t:8,rt:$n[0].Color,fg:"Goldenrod",is:!0},s:{a:1,n:"set_Goldenrod",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Goldenrod",is:!0},fn:"Goldenrod"},{a:2,n:"Gray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Gray",t:8,rt:$n[0].Color,fg:"Gray",is:!0},s:{a:1,n:"set_Gray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Gray",is:!0},fn:"Gray"},{a:2,n:"Green",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Green",t:8,rt:$n[0].Color,fg:"Green",is:!0},s:{a:1,n:"set_Green",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Green",is:!0},fn:"Green"},{a:2,n:"GreenYellow",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_GreenYellow",t:8,rt:$n[0].Color,fg:"GreenYellow",is:!0},s:{a:1,n:"set_GreenYellow",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"GreenYellow",is:!0},fn:"GreenYellow"},{a:2,n:"Honeydew",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Honeydew",t:8,rt:$n[0].Color,fg:"Honeydew",is:!0},s:{a:1,n:"set_Honeydew",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Honeydew",is:!0},fn:"Honeydew"},{a:2,n:"HotPink",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_HotPink",t:8,rt:$n[0].Color,fg:"HotPink",is:!0},s:{a:1,n:"set_HotPink",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"HotPink",is:!0},fn:"HotPink"},{a:2,n:"IndianRed",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_IndianRed",t:8,rt:$n[0].Color,fg:"IndianRed",is:!0},s:{a:1,n:"set_IndianRed",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"IndianRed",is:!0},fn:"IndianRed"},{a:2,n:"Indigo",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Indigo",t:8,rt:$n[0].Color,fg:"Indigo",is:!0},s:{a:1,n:"set_Indigo",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Indigo",is:!0},fn:"Indigo"},{a:2,n:"Ivory",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Ivory",t:8,rt:$n[0].Color,fg:"Ivory",is:!0},s:{a:1,n:"set_Ivory",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Ivory",is:!0},fn:"Ivory"},{a:2,n:"Khaki",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Khaki",t:8,rt:$n[0].Color,fg:"Khaki",is:!0},s:{a:1,n:"set_Khaki",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Khaki",is:!0},fn:"Khaki"},{a:2,n:"Lavender",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Lavender",t:8,rt:$n[0].Color,fg:"Lavender",is:!0},s:{a:1,n:"set_Lavender",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Lavender",is:!0},fn:"Lavender"},{a:2,n:"LavenderBlush",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LavenderBlush",t:8,rt:$n[0].Color,fg:"LavenderBlush",is:!0},s:{a:1,n:"set_LavenderBlush",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LavenderBlush",is:!0},fn:"LavenderBlush"},{a:2,n:"LawnGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LawnGreen",t:8,rt:$n[0].Color,fg:"LawnGreen",is:!0},s:{a:1,n:"set_LawnGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LawnGreen",is:!0},fn:"LawnGreen"},{a:2,n:"LemonChiffon",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LemonChiffon",t:8,rt:$n[0].Color,fg:"LemonChiffon",is:!0},s:{a:1,n:"set_LemonChiffon",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LemonChiffon",is:!0},fn:"LemonChiffon"},{a:2,n:"LightBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightBlue",t:8,rt:$n[0].Color,fg:"LightBlue",is:!0},s:{a:1,n:"set_LightBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightBlue",is:!0},fn:"LightBlue"},{a:2,n:"LightCoral",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightCoral",t:8,rt:$n[0].Color,fg:"LightCoral",is:!0},s:{a:1,n:"set_LightCoral",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightCoral",is:!0},fn:"LightCoral"},{a:2,n:"LightCyan",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightCyan",t:8,rt:$n[0].Color,fg:"LightCyan",is:!0},s:{a:1,n:"set_LightCyan",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightCyan",is:!0},fn:"LightCyan"},{a:2,n:"LightGoldenrodYellow",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightGoldenrodYellow",t:8,rt:$n[0].Color,fg:"LightGoldenrodYellow",is:!0},s:{a:1,n:"set_LightGoldenrodYellow",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightGoldenrodYellow",is:!0},fn:"LightGoldenrodYellow"},{a:2,n:"LightGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightGray",t:8,rt:$n[0].Color,fg:"LightGray",is:!0},s:{a:1,n:"set_LightGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightGray",is:!0},fn:"LightGray"},{a:2,n:"LightGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightGreen",t:8,rt:$n[0].Color,fg:"LightGreen",is:!0},s:{a:1,n:"set_LightGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightGreen",is:!0},fn:"LightGreen"},{a:2,n:"LightPink",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightPink",t:8,rt:$n[0].Color,fg:"LightPink",is:!0},s:{a:1,n:"set_LightPink",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightPink",is:!0},fn:"LightPink"},{a:2,n:"LightSalmon",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightSalmon",t:8,rt:$n[0].Color,fg:"LightSalmon",is:!0},s:{a:1,n:"set_LightSalmon",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightSalmon",is:!0},fn:"LightSalmon"},{a:2,n:"LightSeaGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightSeaGreen",t:8,rt:$n[0].Color,fg:"LightSeaGreen",is:!0},s:{a:1,n:"set_LightSeaGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightSeaGreen",is:!0},fn:"LightSeaGreen"},{a:2,n:"LightSkyBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightSkyBlue",t:8,rt:$n[0].Color,fg:"LightSkyBlue",is:!0},s:{a:1,n:"set_LightSkyBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightSkyBlue",is:!0},fn:"LightSkyBlue"},{a:2,n:"LightSlateGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightSlateGray",t:8,rt:$n[0].Color,fg:"LightSlateGray",is:!0},s:{a:1,n:"set_LightSlateGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightSlateGray",is:!0},fn:"LightSlateGray"},{a:2,n:"LightSteelBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightSteelBlue",t:8,rt:$n[0].Color,fg:"LightSteelBlue",is:!0},s:{a:1,n:"set_LightSteelBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightSteelBlue",is:!0},fn:"LightSteelBlue"},{a:2,n:"LightYellow",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LightYellow",t:8,rt:$n[0].Color,fg:"LightYellow",is:!0},s:{a:1,n:"set_LightYellow",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LightYellow",is:!0},fn:"LightYellow"},{a:2,n:"Lime",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Lime",t:8,rt:$n[0].Color,fg:"Lime",is:!0},s:{a:1,n:"set_Lime",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Lime",is:!0},fn:"Lime"},{a:2,n:"LimeGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_LimeGreen",t:8,rt:$n[0].Color,fg:"LimeGreen",is:!0},s:{a:1,n:"set_LimeGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"LimeGreen",is:!0},fn:"LimeGreen"},{a:2,n:"Linen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Linen",t:8,rt:$n[0].Color,fg:"Linen",is:!0},s:{a:1,n:"set_Linen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Linen",is:!0},fn:"Linen"},{a:2,n:"Magenta",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Magenta",t:8,rt:$n[0].Color,fg:"Magenta",is:!0},s:{a:1,n:"set_Magenta",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Magenta",is:!0},fn:"Magenta"},{a:2,n:"Maroon",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Maroon",t:8,rt:$n[0].Color,fg:"Maroon",is:!0},s:{a:1,n:"set_Maroon",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Maroon",is:!0},fn:"Maroon"},{a:2,n:"MediumAquamarine",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumAquamarine",t:8,rt:$n[0].Color,fg:"MediumAquamarine",is:!0},s:{a:1,n:"set_MediumAquamarine",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumAquamarine",is:!0},fn:"MediumAquamarine"},{a:2,n:"MediumBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumBlue",t:8,rt:$n[0].Color,fg:"MediumBlue",is:!0},s:{a:1,n:"set_MediumBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumBlue",is:!0},fn:"MediumBlue"},{a:2,n:"MediumOrchid",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumOrchid",t:8,rt:$n[0].Color,fg:"MediumOrchid",is:!0},s:{a:1,n:"set_MediumOrchid",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumOrchid",is:!0},fn:"MediumOrchid"},{a:2,n:"MediumPurple",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumPurple",t:8,rt:$n[0].Color,fg:"MediumPurple",is:!0},s:{a:1,n:"set_MediumPurple",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumPurple",is:!0},fn:"MediumPurple"},{a:2,n:"MediumSeaGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumSeaGreen",t:8,rt:$n[0].Color,fg:"MediumSeaGreen",is:!0},s:{a:1,n:"set_MediumSeaGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumSeaGreen",is:!0},fn:"MediumSeaGreen"},{a:2,n:"MediumSlateBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumSlateBlue",t:8,rt:$n[0].Color,fg:"MediumSlateBlue",is:!0},s:{a:1,n:"set_MediumSlateBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumSlateBlue",is:!0},fn:"MediumSlateBlue"},{a:2,n:"MediumSpringGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumSpringGreen",t:8,rt:$n[0].Color,fg:"MediumSpringGreen",is:!0},s:{a:1,n:"set_MediumSpringGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumSpringGreen",is:!0},fn:"MediumSpringGreen"},{a:2,n:"MediumTurquoise",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumTurquoise",t:8,rt:$n[0].Color,fg:"MediumTurquoise",is:!0},s:{a:1,n:"set_MediumTurquoise",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumTurquoise",is:!0},fn:"MediumTurquoise"},{a:2,n:"MediumVioletRed",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MediumVioletRed",t:8,rt:$n[0].Color,fg:"MediumVioletRed",is:!0},s:{a:1,n:"set_MediumVioletRed",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MediumVioletRed",is:!0},fn:"MediumVioletRed"},{a:2,n:"MidnightBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MidnightBlue",t:8,rt:$n[0].Color,fg:"MidnightBlue",is:!0},s:{a:1,n:"set_MidnightBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MidnightBlue",is:!0},fn:"MidnightBlue"},{a:2,n:"MintCream",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MintCream",t:8,rt:$n[0].Color,fg:"MintCream",is:!0},s:{a:1,n:"set_MintCream",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MintCream",is:!0},fn:"MintCream"},{a:2,n:"MistyRose",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MistyRose",t:8,rt:$n[0].Color,fg:"MistyRose",is:!0},s:{a:1,n:"set_MistyRose",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MistyRose",is:!0},fn:"MistyRose"},{a:2,n:"Moccasin",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Moccasin",t:8,rt:$n[0].Color,fg:"Moccasin",is:!0},s:{a:1,n:"set_Moccasin",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Moccasin",is:!0},fn:"Moccasin"},{a:2,n:"MonoGameOrange",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_MonoGameOrange",t:8,rt:$n[0].Color,fg:"MonoGameOrange",is:!0},s:{a:1,n:"set_MonoGameOrange",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"MonoGameOrange",is:!0},fn:"MonoGameOrange"},{a:2,n:"NavajoWhite",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_NavajoWhite",t:8,rt:$n[0].Color,fg:"NavajoWhite",is:!0},s:{a:1,n:"set_NavajoWhite",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"NavajoWhite",is:!0},fn:"NavajoWhite"},{a:2,n:"Navy",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Navy",t:8,rt:$n[0].Color,fg:"Navy",is:!0},s:{a:1,n:"set_Navy",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Navy",is:!0},fn:"Navy"},{a:2,n:"OldLace",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_OldLace",t:8,rt:$n[0].Color,fg:"OldLace",is:!0},s:{a:1,n:"set_OldLace",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"OldLace",is:!0},fn:"OldLace"},{a:2,n:"Olive",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Olive",t:8,rt:$n[0].Color,fg:"Olive",is:!0},s:{a:1,n:"set_Olive",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Olive",is:!0},fn:"Olive"},{a:2,n:"OliveDrab",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_OliveDrab",t:8,rt:$n[0].Color,fg:"OliveDrab",is:!0},s:{a:1,n:"set_OliveDrab",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"OliveDrab",is:!0},fn:"OliveDrab"},{a:2,n:"Orange",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Orange",t:8,rt:$n[0].Color,fg:"Orange",is:!0},s:{a:1,n:"set_Orange",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Orange",is:!0},fn:"Orange"},{a:2,n:"OrangeRed",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_OrangeRed",t:8,rt:$n[0].Color,fg:"OrangeRed",is:!0},s:{a:1,n:"set_OrangeRed",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"OrangeRed",is:!0},fn:"OrangeRed"},{a:2,n:"Orchid",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Orchid",t:8,rt:$n[0].Color,fg:"Orchid",is:!0},s:{a:1,n:"set_Orchid",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Orchid",is:!0},fn:"Orchid"},{a:2,n:"PackedValue",t:16,rt:$n[1].UInt32,g:{a:2,n:"get_PackedValue",t:8,rt:$n[1].UInt32,fg:"PackedValue"},s:{a:2,n:"set_PackedValue",t:8,p:[$n[1].UInt32],rt:$n[1].Void,fs:"PackedValue"},fn:"PackedValue"},{a:2,n:"PaleGoldenrod",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PaleGoldenrod",t:8,rt:$n[0].Color,fg:"PaleGoldenrod",is:!0},s:{a:1,n:"set_PaleGoldenrod",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PaleGoldenrod",is:!0},fn:"PaleGoldenrod"},{a:2,n:"PaleGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PaleGreen",t:8,rt:$n[0].Color,fg:"PaleGreen",is:!0},s:{a:1,n:"set_PaleGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PaleGreen",is:!0},fn:"PaleGreen"},{a:2,n:"PaleTurquoise",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PaleTurquoise",t:8,rt:$n[0].Color,fg:"PaleTurquoise",is:!0},s:{a:1,n:"set_PaleTurquoise",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PaleTurquoise",is:!0},fn:"PaleTurquoise"},{a:2,n:"PaleVioletRed",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PaleVioletRed",t:8,rt:$n[0].Color,fg:"PaleVioletRed",is:!0},s:{a:1,n:"set_PaleVioletRed",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PaleVioletRed",is:!0},fn:"PaleVioletRed"},{a:2,n:"PapayaWhip",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PapayaWhip",t:8,rt:$n[0].Color,fg:"PapayaWhip",is:!0},s:{a:1,n:"set_PapayaWhip",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PapayaWhip",is:!0},fn:"PapayaWhip"},{a:2,n:"PeachPuff",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PeachPuff",t:8,rt:$n[0].Color,fg:"PeachPuff",is:!0},s:{a:1,n:"set_PeachPuff",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PeachPuff",is:!0},fn:"PeachPuff"},{a:2,n:"Peru",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Peru",t:8,rt:$n[0].Color,fg:"Peru",is:!0},s:{a:1,n:"set_Peru",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Peru",is:!0},fn:"Peru"},{a:2,n:"Pink",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Pink",t:8,rt:$n[0].Color,fg:"Pink",is:!0},s:{a:1,n:"set_Pink",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Pink",is:!0},fn:"Pink"},{a:2,n:"Plum",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Plum",t:8,rt:$n[0].Color,fg:"Plum",is:!0},s:{a:1,n:"set_Plum",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Plum",is:!0},fn:"Plum"},{a:2,n:"PowderBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_PowderBlue",t:8,rt:$n[0].Color,fg:"PowderBlue",is:!0},s:{a:1,n:"set_PowderBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"PowderBlue",is:!0},fn:"PowderBlue"},{a:2,n:"Purple",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Purple",t:8,rt:$n[0].Color,fg:"Purple",is:!0},s:{a:1,n:"set_Purple",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Purple",is:!0},fn:"Purple"},{a:2,n:"R",t:16,rt:$n[1].Byte,g:{a:2,n:"get_R",t:8,rt:$n[1].Byte,fg:"R"},s:{a:2,n:"set_R",t:8,p:[$n[1].Byte],rt:$n[1].Void,fs:"R"},fn:"R"},{a:2,n:"Red",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Red",t:8,rt:$n[0].Color,fg:"Red",is:!0},s:{a:1,n:"set_Red",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Red",is:!0},fn:"Red"},{a:2,n:"RosyBrown",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_RosyBrown",t:8,rt:$n[0].Color,fg:"RosyBrown",is:!0},s:{a:1,n:"set_RosyBrown",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"RosyBrown",is:!0},fn:"RosyBrown"},{a:2,n:"RoyalBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_RoyalBlue",t:8,rt:$n[0].Color,fg:"RoyalBlue",is:!0},s:{a:1,n:"set_RoyalBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"RoyalBlue",is:!0},fn:"RoyalBlue"},{a:2,n:"SaddleBrown",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SaddleBrown",t:8,rt:$n[0].Color,fg:"SaddleBrown",is:!0},s:{a:1,n:"set_SaddleBrown",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SaddleBrown",is:!0},fn:"SaddleBrown"},{a:2,n:"Salmon",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Salmon",t:8,rt:$n[0].Color,fg:"Salmon",is:!0},s:{a:1,n:"set_Salmon",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Salmon",is:!0},fn:"Salmon"},{a:2,n:"SandyBrown",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SandyBrown",t:8,rt:$n[0].Color,fg:"SandyBrown",is:!0},s:{a:1,n:"set_SandyBrown",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SandyBrown",is:!0},fn:"SandyBrown"},{a:2,n:"SeaGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SeaGreen",t:8,rt:$n[0].Color,fg:"SeaGreen",is:!0},s:{a:1,n:"set_SeaGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SeaGreen",is:!0},fn:"SeaGreen"},{a:2,n:"SeaShell",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SeaShell",t:8,rt:$n[0].Color,fg:"SeaShell",is:!0},s:{a:1,n:"set_SeaShell",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SeaShell",is:!0},fn:"SeaShell"},{a:2,n:"Sienna",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Sienna",t:8,rt:$n[0].Color,fg:"Sienna",is:!0},s:{a:1,n:"set_Sienna",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Sienna",is:!0},fn:"Sienna"},{a:2,n:"Silver",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Silver",t:8,rt:$n[0].Color,fg:"Silver",is:!0},s:{a:1,n:"set_Silver",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Silver",is:!0},fn:"Silver"},{a:2,n:"SkyBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SkyBlue",t:8,rt:$n[0].Color,fg:"SkyBlue",is:!0},s:{a:1,n:"set_SkyBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SkyBlue",is:!0},fn:"SkyBlue"},{a:2,n:"SlateBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SlateBlue",t:8,rt:$n[0].Color,fg:"SlateBlue",is:!0},s:{a:1,n:"set_SlateBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SlateBlue",is:!0},fn:"SlateBlue"},{a:2,n:"SlateGray",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SlateGray",t:8,rt:$n[0].Color,fg:"SlateGray",is:!0},s:{a:1,n:"set_SlateGray",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SlateGray",is:!0},fn:"SlateGray"},{a:2,n:"Snow",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Snow",t:8,rt:$n[0].Color,fg:"Snow",is:!0},s:{a:1,n:"set_Snow",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Snow",is:!0},fn:"Snow"},{a:2,n:"SpringGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SpringGreen",t:8,rt:$n[0].Color,fg:"SpringGreen",is:!0},s:{a:1,n:"set_SpringGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SpringGreen",is:!0},fn:"SpringGreen"},{a:2,n:"SteelBlue",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_SteelBlue",t:8,rt:$n[0].Color,fg:"SteelBlue",is:!0},s:{a:1,n:"set_SteelBlue",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"SteelBlue",is:!0},fn:"SteelBlue"},{a:2,n:"Tan",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Tan",t:8,rt:$n[0].Color,fg:"Tan",is:!0},s:{a:1,n:"set_Tan",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Tan",is:!0},fn:"Tan"},{a:2,n:"Teal",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Teal",t:8,rt:$n[0].Color,fg:"Teal",is:!0},s:{a:1,n:"set_Teal",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Teal",is:!0},fn:"Teal"},{a:2,n:"Thistle",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Thistle",t:8,rt:$n[0].Color,fg:"Thistle",is:!0},s:{a:1,n:"set_Thistle",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Thistle",is:!0},fn:"Thistle"},{a:2,n:"Tomato",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Tomato",t:8,rt:$n[0].Color,fg:"Tomato",is:!0},s:{a:1,n:"set_Tomato",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Tomato",is:!0},fn:"Tomato"},{a:2,n:"Transparent",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Transparent",t:8,rt:$n[0].Color,fg:"Transparent",is:!0},s:{a:1,n:"set_Transparent",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Transparent",is:!0},fn:"Transparent"},{a:2,n:"TransparentBlack",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_TransparentBlack",t:8,rt:$n[0].Color,fg:"TransparentBlack",is:!0},s:{a:1,n:"set_TransparentBlack",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"TransparentBlack",is:!0},fn:"TransparentBlack"},{a:2,n:"Turquoise",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Turquoise",t:8,rt:$n[0].Color,fg:"Turquoise",is:!0},s:{a:1,n:"set_Turquoise",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Turquoise",is:!0},fn:"Turquoise"},{a:2,n:"Violet",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Violet",t:8,rt:$n[0].Color,fg:"Violet",is:!0},s:{a:1,n:"set_Violet",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Violet",is:!0},fn:"Violet"},{a:2,n:"Wheat",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Wheat",t:8,rt:$n[0].Color,fg:"Wheat",is:!0},s:{a:1,n:"set_Wheat",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Wheat",is:!0},fn:"Wheat"},{a:2,n:"White",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_White",t:8,rt:$n[0].Color,fg:"White",is:!0},s:{a:1,n:"set_White",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"White",is:!0},fn:"White"},{a:2,n:"WhiteSmoke",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_WhiteSmoke",t:8,rt:$n[0].Color,fg:"WhiteSmoke",is:!0},s:{a:1,n:"set_WhiteSmoke",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"WhiteSmoke",is:!0},fn:"WhiteSmoke"},{a:2,n:"Yellow",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_Yellow",t:8,rt:$n[0].Color,fg:"Yellow",is:!0},s:{a:1,n:"set_Yellow",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"Yellow",is:!0},fn:"Yellow"},{a:2,n:"YellowGreen",is:!0,t:16,rt:$n[0].Color,g:{a:2,n:"get_YellowGreen",t:8,rt:$n[0].Color,fg:"YellowGreen",is:!0},s:{a:1,n:"set_YellowGreen",t:8,p:[$n[0].Color],rt:$n[1].Void,fs:"YellowGreen",is:!0},fn:"YellowGreen"},{a:1,n:"_packedValue",t:4,rt:$n[1].UInt32,sn:"_packedValue"}]}});$m($n[0].ContainmentType,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Contains",is:!0,t:4,rt:$n[0].ContainmentType,sn:"Contains"},{a:2,n:"Disjoint",is:!0,t:4,rt:$n[0].ContainmentType,sn:"Disjoint"},{a:2,n:"Intersects",is:!0,t:4,rt:$n[0].ContainmentType,sn:"Intersects"}]}});$m($n[0].Curve,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Clone",t:8,sn:"Clone",rt:$n[0].Curve},{a:2,n:"ComputeTangent",t:8,pi:[{n:"keyIndex",pt:$n[1].Int32,ps:0},{n:"tangentType",pt:$n[0].CurveTangent,ps:1}],sn:"ComputeTangent",rt:$n[1].Void,p:[$n[1].Int32,$n[0].CurveTangent]},{a:2,n:"ComputeTangent",t:8,pi:[{n:"keyIndex",pt:$n[1].Int32,ps:0},{n:"tangentInType",pt:$n[0].CurveTangent,ps:1},{n:"tangentOutType",pt:$n[0].CurveTangent,ps:2}],sn:"ComputeTangent$1",rt:$n[1].Void,p:[$n[1].Int32,$n[0].CurveTangent,$n[0].CurveTangent]},{a:2,n:"ComputeTangents",t:8,pi:[{n:"tangentType",pt:$n[0].CurveTangent,ps:0}],sn:"ComputeTangents",rt:$n[1].Void,p:[$n[0].CurveTangent]},{a:2,n:"ComputeTangents",t:8,pi:[{n:"tangentInType",pt:$n[0].CurveTangent,ps:0},{n:"tangentOutType",pt:$n[0].CurveTangent,ps:1}],sn:"ComputeTangents$1",rt:$n[1].Void,p:[$n[0].CurveTangent,$n[0].CurveTangent]},{a:2,n:"Evaluate",t:8,pi:[{n:"position",pt:$n[1].Single,ps:0}],sn:"Evaluate",rt:$n[1].Single,p:[$n[1].Single]},{a:1,n:"GetCurvePosition",t:8,pi:[{n:"position",pt:$n[1].Single,ps:0}],sn:"GetCurvePosition",rt:$n[1].Single,p:[$n[1].Single]},{a:1,n:"GetNumberOfCycle",t:8,pi:[{n:"position",pt:$n[1].Single,ps:0}],sn:"GetNumberOfCycle",rt:$n[1].Int32,p:[$n[1].Single]},{a:2,n:"IsConstant",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsConstant",t:8,rt:$n[1].Boolean,fg:"IsConstant"},fn:"IsConstant"},{a:2,n:"Keys",t:16,rt:$n[0].CurveKeyCollection,g:{a:2,n:"get_Keys",t:8,rt:$n[0].CurveKeyCollection,fg:"Keys"},fn:"Keys"},{a:2,n:"PostLoop",t:16,rt:$n[0].CurveLoopType,g:{a:2,n:"get_PostLoop",t:8,rt:$n[0].CurveLoopType,fg:"PostLoop"},s:{a:2,n:"set_PostLoop",t:8,p:[$n[0].CurveLoopType],rt:$n[1].Void,fs:"PostLoop"},fn:"PostLoop"},{a:2,n:"PreLoop",t:16,rt:$n[0].CurveLoopType,g:{a:2,n:"get_PreLoop",t:8,rt:$n[0].CurveLoopType,fg:"PreLoop"},s:{a:2,n:"set_PreLoop",t:8,p:[$n[0].CurveLoopType],rt:$n[1].Void,fs:"PreLoop"},fn:"PreLoop"},{a:1,n:"_keys",t:4,rt:$n[0].CurveKeyCollection,sn:"_keys"},{a:1,n:"_postLoop",t:4,rt:$n[0].CurveLoopType,sn:"_postLoop"},{a:1,n:"_preLoop",t:4,rt:$n[0].CurveLoopType,sn:"_preLoop"}]}});$m($n[0].CurveContinuity,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Smooth",is:!0,t:4,rt:$n[0].CurveContinuity,sn:"Smooth"},{a:2,n:"Step",is:!0,t:4,rt:$n[0].CurveContinuity,sn:"Step"}]}});$m($n[0].CurveKey,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single],pi:[{n:"position",pt:$n[1].Single,ps:0},{n:"value",pt:$n[1].Single,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"position",pt:$n[1].Single,ps:0},{n:"value",pt:$n[1].Single,ps:1},{n:"tangentIn",pt:$n[1].Single,ps:2},{n:"tangentOut",pt:$n[1].Single,ps:3}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].CurveContinuity],pi:[{n:"position",pt:$n[1].Single,ps:0},{n:"value",pt:$n[1].Single,ps:1},{n:"tangentIn",pt:$n[1].Single,ps:2},{n:"tangentOut",pt:$n[1].Single,ps:3},{n:"continuity",pt:$n[0].CurveContinuity,ps:4}],sn:"$ctor3"},{a:2,n:"Clone",t:8,sn:"Clone",rt:$n[0].CurveKey},{a:2,n:"CompareTo",t:8,pi:[{n:"other",pt:$n[0].CurveKey,ps:0}],sn:"compareTo",rt:$n[1].Int32,p:[$n[0].CurveKey]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].CurveKey,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].CurveKey]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].CurveKey,ps:0},{n:"value2",pt:$n[0].CurveKey,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].CurveKey,$n[0].CurveKey]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].CurveKey,ps:0},{n:"value2",pt:$n[0].CurveKey,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].CurveKey,$n[0].CurveKey]},{a:2,n:"Continuity",t:16,rt:$n[0].CurveContinuity,g:{a:2,n:"get_Continuity",t:8,rt:$n[0].CurveContinuity,fg:"Continuity"},s:{a:2,n:"set_Continuity",t:8,p:[$n[0].CurveContinuity],rt:$n[1].Void,fs:"Continuity"},fn:"Continuity"},{a:2,n:"Position",t:16,rt:$n[1].Single,g:{a:2,n:"get_Position",t:8,rt:$n[1].Single,fg:"Position"},fn:"Position"},{a:2,n:"TangentIn",t:16,rt:$n[1].Single,g:{a:2,n:"get_TangentIn",t:8,rt:$n[1].Single,fg:"TangentIn"},s:{a:2,n:"set_TangentIn",t:8,p:[$n[1].Single],rt:$n[1].Void,fs:"TangentIn"},fn:"TangentIn"},{a:2,n:"TangentOut",t:16,rt:$n[1].Single,g:{a:2,n:"get_TangentOut",t:8,rt:$n[1].Single,fg:"TangentOut"},s:{a:2,n:"set_TangentOut",t:8,p:[$n[1].Single],rt:$n[1].Void,fs:"TangentOut"},fn:"TangentOut"},{a:2,n:"Value",t:16,rt:$n[1].Single,g:{a:2,n:"get_Value",t:8,rt:$n[1].Single,fg:"Value"},s:{a:2,n:"set_Value",t:8,p:[$n[1].Single],rt:$n[1].Void,fs:"Value"},fn:"Value"},{a:1,n:"_continuity",t:4,rt:$n[0].CurveContinuity,sn:"_continuity"},{a:1,n:"_position",t:4,rt:$n[1].Single,sn:"_position",ro:!0},{a:1,n:"_tangentIn",t:4,rt:$n[1].Single,sn:"_tangentIn"},{a:1,n:"_tangentOut",t:4,rt:$n[1].Single,sn:"_tangentOut"},{a:1,n:"_value",t:4,rt:$n[1].Single,sn:"_value"}]}});$m($n[0].CurveKeyCollection,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"item",pt:$n[0].CurveKey,ps:0}],sn:"add",rt:$n[1].Void,p:[$n[0].CurveKey]},{a:2,n:"Clear",t:8,sn:"clear",rt:$n[1].Void},{a:2,n:"Clone",t:8,sn:"Clone",rt:$n[0].CurveKeyCollection},{a:2,n:"Contains",t:8,pi:[{n:"item",pt:$n[0].CurveKey,ps:0}],sn:"contains",rt:$n[1].Boolean,p:[$n[0].CurveKey]},{a:2,n:"CopyTo",t:8,pi:[{n:"array",pt:System.Array.type(Microsoft.Xna.Framework.CurveKey),ps:0},{n:"arrayIndex",pt:$n[1].Int32,ps:1}],sn:"copyTo",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.CurveKey),$n[1].Int32]},{a:2,n:"GetEnumerator",t:8,sn:"getEnumerator",rt:$n[2].IEnumerator$1(Microsoft.Xna.Framework.CurveKey)},{a:2,n:"IndexOf",t:8,pi:[{n:"item",pt:$n[0].CurveKey,ps:0}],sn:"IndexOf",rt:$n[1].Int32,p:[$n[0].CurveKey]},{a:2,n:"Remove",t:8,pi:[{n:"item",pt:$n[0].CurveKey,ps:0}],sn:"remove",rt:$n[1].Boolean,p:[$n[0].CurveKey]},{a:2,n:"RemoveAt",t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0}],sn:"RemoveAt",rt:$n[1].Void,p:[$n[1].Int32]},{a:2,n:"Count",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Count",t:8,rt:$n[1].Int32,fg:"Count"},fn:"Count"},{a:2,n:"IsReadOnly",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsReadOnly",t:8,rt:$n[1].Boolean,fg:"IsReadOnly"},fn:"IsReadOnly"},{a:2,n:"Item",t:16,rt:$n[0].CurveKey,p:[$n[1].Int32],i:!0,ipi:[{n:"index",pt:$n[1].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0}],sn:"getItem",rt:$n[0].CurveKey,p:[$n[1].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0},{n:"value",pt:$n[0].CurveKey,ps:1}],sn:"setItem",rt:$n[1].Void,p:[$n[1].Int32,$n[0].CurveKey]}},{a:1,n:"_keys",t:4,rt:$n[2].List$1(Microsoft.Xna.Framework.CurveKey),sn:"_keys",ro:!0}]}});$m($n[0].CurveLoopType,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Constant",is:!0,t:4,rt:$n[0].CurveLoopType,sn:"Constant"},{a:2,n:"Cycle",is:!0,t:4,rt:$n[0].CurveLoopType,sn:"Cycle"},{a:2,n:"CycleOffset",is:!0,t:4,rt:$n[0].CurveLoopType,sn:"CycleOffset"},{a:2,n:"Linear",is:!0,t:4,rt:$n[0].CurveLoopType,sn:"Linear"},{a:2,n:"Oscillate",is:!0,t:4,rt:$n[0].CurveLoopType,sn:"Oscillate"}]}});$m($n[0].CurveTangent,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Flat",is:!0,t:4,rt:$n[0].CurveTangent,sn:"Flat"},{a:2,n:"Linear",is:!0,t:4,rt:$n[0].CurveTangent,sn:"Linear"},{a:2,n:"Smooth",is:!0,t:4,rt:$n[0].CurveTangent,sn:"Smooth"}]}});$m($n[0].Game,function(){return{att:1048705,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{v:!0,a:3,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Draw",rt:$n[1].Void,p:[$n[0].GameTime]},{v:!0,a:3,n:"Initialize",t:8,sn:"Initialize",rt:$n[1].Void},{a:1,n:"InternalDraw",t:8,sn:"InternalDraw",rt:$n[1].Void},{v:!0,a:3,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[1].Void},{a:2,n:"Run",t:8,sn:"Run",rt:$n[1].Void},{v:!0,a:3,n:"UnloadContent",t:8,sn:"UnloadContent",rt:$n[1].Void},{v:!0,a:3,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Update",rt:$n[1].Void,p:[$n[0].GameTime]},{a:2,n:"Content",t:16,rt:$n[3].ContentManager,g:{a:2,n:"get_Content",t:8,rt:$n[3].ContentManager,fg:"Content"},s:{a:2,n:"set_Content",t:8,p:[$n[3].ContentManager],rt:$n[1].Void,fs:"Content"},fn:"Content"},{a:2,n:"GraphicsDevice",t:16,rt:$n[4].GraphicsDevice,g:{a:2,n:"get_GraphicsDevice",t:8,rt:$n[4].GraphicsDevice,fg:"GraphicsDevice"},s:{a:2,n:"set_GraphicsDevice",t:8,p:[$n[4].GraphicsDevice],rt:$n[1].Void,fs:"GraphicsDevice"},fn:"GraphicsDevice"}]}});$m($n[0].GameTime,function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"}]}});$m($n[0].GraphicsDeviceManager,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].Game],pi:[{n:"game",pt:$n[0].Game,ps:0}],sn:"ctor"},{a:2,n:"IsFullScreen",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsFullScreen",t:8,rt:$n[1].Boolean,fg:"IsFullScreen"},s:{a:2,n:"set_IsFullScreen",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"IsFullScreen"},fn:"IsFullScreen"},{a:2,n:"PreferredBackBufferHeight",t:16,rt:$n[1].Int32,g:{a:2,n:"get_PreferredBackBufferHeight",t:8,rt:$n[1].Int32,fg:"PreferredBackBufferHeight"},s:{a:2,n:"set_PreferredBackBufferHeight",t:8,p:[$n[1].Int32],rt:$n[1].Void,fs:"PreferredBackBufferHeight"},fn:"PreferredBackBufferHeight"},{a:2,n:"PreferredBackBufferWidth",t:16,rt:$n[1].Int32,g:{a:2,n:"get_PreferredBackBufferWidth",t:8,rt:$n[1].Int32,fg:"PreferredBackBufferWidth"},s:{a:2,n:"set_PreferredBackBufferWidth",t:8,p:[$n[1].Int32],rt:$n[1].Void,fs:"PreferredBackBufferWidth"},fn:"PreferredBackBufferWidth"},{a:1,n:"__Property__Initializer__PreferredBackBufferHeight",t:4,rt:$n[1].Int32,sn:"__Property__Initializer__PreferredBackBufferHeight"},{a:1,n:"__Property__Initializer__PreferredBackBufferWidth",t:4,rt:$n[1].Int32,sn:"__Property__Initializer__PreferredBackBufferWidth"},{a:4,n:"internal",t:4,rt:$n[0].Game,sn:"internal"}]}});$m($n[0].IDrawable,function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Microsoft$Xna$Framework$IDrawable$Draw",rt:$n[1].Void,p:[$n[0].GameTime]},{ab:!0,a:2,n:"DrawOrder",t:16,rt:$n[1].Int32,g:{ab:!0,a:2,n:"get_DrawOrder",t:8,rt:$n[1].Int32,fg:"Microsoft$Xna$Framework$IDrawable$DrawOrder"},s:{ab:!0,a:1,n:"set_DrawOrder",t:8,p:[$n[1].Int32],rt:$n[1].Void,fs:"Microsoft$Xna$Framework$IDrawable$DrawOrder"},fn:"Microsoft$Xna$Framework$IDrawable$DrawOrder"},{ab:!0,a:2,n:"Visible",t:16,rt:$n[1].Boolean,g:{ab:!0,a:2,n:"get_Visible",t:8,rt:$n[1].Boolean,fg:"Microsoft$Xna$Framework$IDrawable$Visible"},s:{ab:!0,a:1,n:"set_Visible",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"Microsoft$Xna$Framework$IDrawable$Visible"},fn:"Microsoft$Xna$Framework$IDrawable$Visible"},{ab:!0,a:2,n:"DrawOrderChanged",t:2,ad:{ab:!0,a:2,n:"add_DrawOrderChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IDrawable$addDrawOrderChanged",rt:$n[1].Void,p:[Function]},r:{ab:!0,a:2,n:"remove_DrawOrderChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IDrawable$removeDrawOrderChanged",rt:$n[1].Void,p:[Function]}},{ab:!0,a:2,n:"VisibleChanged",t:2,ad:{ab:!0,a:2,n:"add_VisibleChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IDrawable$addVisibleChanged",rt:$n[1].Void,p:[Function]},r:{ab:!0,a:2,n:"remove_VisibleChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IDrawable$removeVisibleChanged",rt:$n[1].Void,p:[Function]}}]}});$m($n[0].IGameComponent,function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"Initialize",t:8,sn:"Microsoft$Xna$Framework$IGameComponent$Initialize",rt:$n[1].Void}]}});$m($n[0].IGraphicsDeviceManager,function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"BeginDraw",t:8,sn:"Microsoft$Xna$Framework$IGraphicsDeviceManager$BeginDraw",rt:$n[1].Boolean},{ab:!0,a:2,n:"CreateDevice",t:8,sn:"Microsoft$Xna$Framework$IGraphicsDeviceManager$CreateDevice",rt:$n[1].Void},{ab:!0,a:2,n:"EndDraw",t:8,sn:"Microsoft$Xna$Framework$IGraphicsDeviceManager$EndDraw",rt:$n[1].Void}]}});$m($n[0].IPlatformBackButton,function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"Handled",t:8,sn:"Microsoft$Xna$Framework$IPlatformBackButton$Handled",rt:$n[1].Boolean}]}});$m($n[0].IUpdateable,function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Microsoft$Xna$Framework$IUpdateable$Update",rt:$n[1].Void,p:[$n[0].GameTime]},{ab:!0,a:2,n:"Enabled",t:16,rt:$n[1].Boolean,g:{ab:!0,a:2,n:"get_Enabled",t:8,rt:$n[1].Boolean,fg:"Microsoft$Xna$Framework$IUpdateable$Enabled"},s:{ab:!0,a:1,n:"set_Enabled",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"Microsoft$Xna$Framework$IUpdateable$Enabled"},fn:"Microsoft$Xna$Framework$IUpdateable$Enabled"},{ab:!0,a:2,n:"UpdateOrder",t:16,rt:$n[1].Int32,g:{ab:!0,a:2,n:"get_UpdateOrder",t:8,rt:$n[1].Int32,fg:"Microsoft$Xna$Framework$IUpdateable$UpdateOrder"},s:{ab:!0,a:1,n:"set_UpdateOrder",t:8,p:[$n[1].Int32],rt:$n[1].Void,fs:"Microsoft$Xna$Framework$IUpdateable$UpdateOrder"},fn:"Microsoft$Xna$Framework$IUpdateable$UpdateOrder"},{ab:!0,a:2,n:"EnabledChanged",t:2,ad:{ab:!0,a:2,n:"add_EnabledChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IUpdateable$addEnabledChanged",rt:$n[1].Void,p:[Function]},r:{ab:!0,a:2,n:"remove_EnabledChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IUpdateable$removeEnabledChanged",rt:$n[1].Void,p:[Function]}},{ab:!0,a:2,n:"UpdateOrderChanged",t:2,ad:{ab:!0,a:2,n:"add_UpdateOrderChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IUpdateable$addUpdateOrderChanged",rt:$n[1].Void,p:[Function]},r:{ab:!0,a:2,n:"remove_UpdateOrderChanged",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"Microsoft$Xna$Framework$IUpdateable$removeUpdateOrderChanged",rt:$n[1].Void,p:[Function]}}]}});$m($n[0].MathHelper,function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1},{n:"value3",pt:$n[1].Single,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4}],sn:"Barycentric",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1},{n:"value3",pt:$n[1].Single,ps:2},{n:"value4",pt:$n[1].Single,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"CatmullRom",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value",pt:$n[1].Int32,ps:0},{n:"min",pt:$n[1].Int32,ps:1},{n:"max",pt:$n[1].Int32,ps:2}],sn:"Clamp",rt:$n[1].Int32,p:[$n[1].Int32,$n[1].Int32,$n[1].Int32]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value",pt:$n[1].Single,ps:0},{n:"min",pt:$n[1].Single,ps:1},{n:"max",pt:$n[1].Single,ps:2}],sn:"Clamp$1",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1}],sn:"Distance",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single]},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"tangent1",pt:$n[1].Single,ps:1},{n:"value2",pt:$n[1].Single,ps:2},{n:"tangent2",pt:$n[1].Single,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"Hermite",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"IsPowerOfTwo",is:!0,t:8,pi:[{n:"value",pt:$n[1].Int32,ps:0}],sn:"IsPowerOfTwo",rt:$n[1].Boolean,p:[$n[1].Int32]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"LerpPrecise",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Int32,ps:0},{n:"value2",pt:$n[1].Int32,ps:1}],sn:"Max",rt:$n[1].Int32,p:[$n[1].Int32,$n[1].Int32]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1}],sn:"Max$1",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Int32,ps:0},{n:"value2",pt:$n[1].Int32,ps:1}],sn:"Min",rt:$n[1].Int32,p:[$n[1].Int32,$n[1].Int32]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1}],sn:"Min$1",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",pt:$n[1].Single,ps:0},{n:"value2",pt:$n[1].Single,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"SmoothStep",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"ToDegrees",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0}],sn:"ToDegrees",rt:$n[1].Single,p:[$n[1].Single]},{a:2,n:"ToRadians",is:!0,t:8,pi:[{n:"degrees",pt:$n[1].Single,ps:0}],sn:"ToRadians",rt:$n[1].Single,p:[$n[1].Single]},{a:2,n:"WrapAngle",is:!0,t:8,pi:[{n:"angle",pt:$n[1].Single,ps:0}],sn:"WrapAngle",rt:$n[1].Single,p:[$n[1].Single]},{a:2,n:"E",is:!0,t:4,rt:$n[1].Single,sn:"E"},{a:2,n:"Log10E",is:!0,t:4,rt:$n[1].Single,sn:"Log10E"},{a:2,n:"Log2E",is:!0,t:4,rt:$n[1].Single,sn:"Log2E"},{a:2,n:"Pi",is:!0,t:4,rt:$n[1].Single,sn:"Pi"},{a:2,n:"PiOver2",is:!0,t:4,rt:$n[1].Single,sn:"PiOver2"},{a:2,n:"PiOver4",is:!0,t:4,rt:$n[1].Single,sn:"PiOver4"},{a:2,n:"TwoPi",is:!0,t:4,rt:$n[1].Single,sn:"TwoPi"}]}});$m($n[0].Matrix,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4],pi:[{n:"row1",pt:$n[0].Vector4,ps:0},{n:"row2",pt:$n[0].Vector4,ps:1},{n:"row3",pt:$n[0].Vector4,ps:2},{n:"row4",pt:$n[0].Vector4,ps:3}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"m11",pt:$n[1].Single,ps:0},{n:"m12",pt:$n[1].Single,ps:1},{n:"m13",pt:$n[1].Single,ps:2},{n:"m14",pt:$n[1].Single,ps:3},{n:"m21",pt:$n[1].Single,ps:4},{n:"m22",pt:$n[1].Single,ps:5},{n:"m23",pt:$n[1].Single,ps:6},{n:"m24",pt:$n[1].Single,ps:7},{n:"m31",pt:$n[1].Single,ps:8},{n:"m32",pt:$n[1].Single,ps:9},{n:"m33",pt:$n[1].Single,ps:10},{n:"m34",pt:$n[1].Single,ps:11},{n:"m41",pt:$n[1].Single,ps:12},{n:"m42",pt:$n[1].Single,ps:13},{n:"m43",pt:$n[1].Single,ps:14},{n:"m44",pt:$n[1].Single,ps:15}],sn:"$ctor2"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"Add",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Add",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"matrix2",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Add$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix,$n[0].Matrix]},{a:2,n:"CreateBillboard",is:!0,t:8,pi:[{n:"objectPosition",pt:$n[0].Vector3,ps:0},{n:"cameraPosition",pt:$n[0].Vector3,ps:1},{n:"cameraUpVector",pt:$n[0].Vector3,ps:2},{n:"cameraForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:3}],sn:"CreateBillboard",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"CreateBillboard",is:!0,t:8,pi:[{n:"objectPosition",ref:!0,pt:$n[0].Vector3,ps:0},{n:"cameraPosition",ref:!0,pt:$n[0].Vector3,ps:1},{n:"cameraUpVector",ref:!0,pt:$n[0].Vector3,ps:2},{n:"cameraForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:3},{n:"result",out:!0,pt:$n[0].Matrix,ps:4}],sn:"CreateBillboard$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),$n[0].Matrix]},{a:2,n:"CreateConstrainedBillboard",is:!0,t:8,pi:[{n:"objectPosition",pt:$n[0].Vector3,ps:0},{n:"cameraPosition",pt:$n[0].Vector3,ps:1},{n:"rotateAxis",pt:$n[0].Vector3,ps:2},{n:"cameraForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:3},{n:"objectForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:4}],sn:"CreateConstrainedBillboard",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"CreateConstrainedBillboard",is:!0,t:8,pi:[{n:"objectPosition",ref:!0,pt:$n[0].Vector3,ps:0},{n:"cameraPosition",ref:!0,pt:$n[0].Vector3,ps:1},{n:"rotateAxis",ref:!0,pt:$n[0].Vector3,ps:2},{n:"cameraForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:3},{n:"objectForwardVector",pt:$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),ps:4},{n:"result",out:!0,pt:$n[0].Matrix,ps:5}],sn:"CreateConstrainedBillboard$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),$n[1].Nullable$1(Microsoft.Xna.Framework.Vector3),$n[0].Matrix]},{a:2,n:"CreateFromAxisAngle",is:!0,t:8,pi:[{n:"axis",pt:$n[0].Vector3,ps:0},{n:"angle",pt:$n[1].Single,ps:1}],sn:"CreateFromAxisAngle",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"CreateFromAxisAngle",is:!0,t:8,pi:[{n:"axis",ref:!0,pt:$n[0].Vector3,ps:0},{n:"angle",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"CreateFromAxisAngle$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateFromQuaternion",is:!0,t:8,pi:[{n:"quaternion",pt:$n[0].Quaternion,ps:0}],sn:"CreateFromQuaternion",rt:$n[0].Matrix,p:[$n[0].Quaternion]},{a:2,n:"CreateFromQuaternion",is:!0,t:8,pi:[{n:"quaternion",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateFromQuaternion$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Matrix]},{a:2,n:"CreateFromYawPitchRoll",is:!0,t:8,pi:[{n:"yaw",pt:$n[1].Single,ps:0},{n:"pitch",pt:$n[1].Single,ps:1},{n:"roll",pt:$n[1].Single,ps:2}],sn:"CreateFromYawPitchRoll",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateFromYawPitchRoll",is:!0,t:8,pi:[{n:"yaw",pt:$n[1].Single,ps:0},{n:"pitch",pt:$n[1].Single,ps:1},{n:"roll",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"CreateFromYawPitchRoll$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateLookAt",is:!0,t:8,pi:[{n:"cameraPosition",pt:$n[0].Vector3,ps:0},{n:"cameraTarget",pt:$n[0].Vector3,ps:1},{n:"cameraUpVector",pt:$n[0].Vector3,ps:2}],sn:"CreateLookAt",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"CreateLookAt",is:!0,t:8,pi:[{n:"cameraPosition",ref:!0,pt:$n[0].Vector3,ps:0},{n:"cameraTarget",ref:!0,pt:$n[0].Vector3,ps:1},{n:"cameraUpVector",ref:!0,pt:$n[0].Vector3,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"CreateLookAt$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Matrix]},{a:2,n:"CreateOrthographic",is:!0,t:8,pi:[{n:"width",pt:$n[1].Single,ps:0},{n:"height",pt:$n[1].Single,ps:1},{n:"zNearPlane",pt:$n[1].Single,ps:2},{n:"zFarPlane",pt:$n[1].Single,ps:3}],sn:"CreateOrthographic",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateOrthographic",is:!0,t:8,pi:[{n:"width",pt:$n[1].Single,ps:0},{n:"height",pt:$n[1].Single,ps:1},{n:"zNearPlane",pt:$n[1].Single,ps:2},{n:"zFarPlane",pt:$n[1].Single,ps:3},{n:"result",out:!0,pt:$n[0].Matrix,ps:4}],sn:"CreateOrthographic$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateOrthographicOffCenter",is:!0,t:8,pi:[{n:"viewingVolume",pt:$n[0].Rectangle,ps:0},{n:"zNearPlane",pt:$n[1].Single,ps:1},{n:"zFarPlane",pt:$n[1].Single,ps:2}],sn:"CreateOrthographicOffCenter",rt:$n[0].Matrix,p:[$n[0].Rectangle,$n[1].Single,$n[1].Single]},{a:2,n:"CreateOrthographicOffCenter",is:!0,t:8,pi:[{n:"left",pt:$n[1].Single,ps:0},{n:"right",pt:$n[1].Single,ps:1},{n:"bottom",pt:$n[1].Single,ps:2},{n:"top",pt:$n[1].Single,ps:3},{n:"zNearPlane",pt:$n[1].Single,ps:4},{n:"zFarPlane",pt:$n[1].Single,ps:5}],sn:"CreateOrthographicOffCenter$1",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateOrthographicOffCenter",is:!0,t:8,pi:[{n:"left",pt:$n[1].Single,ps:0},{n:"right",pt:$n[1].Single,ps:1},{n:"bottom",pt:$n[1].Single,ps:2},{n:"top",pt:$n[1].Single,ps:3},{n:"zNearPlane",pt:$n[1].Single,ps:4},{n:"zFarPlane",pt:$n[1].Single,ps:5},{n:"result",out:!0,pt:$n[0].Matrix,ps:6}],sn:"CreateOrthographicOffCenter$2",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreatePerspective",is:!0,t:8,pi:[{n:"width",pt:$n[1].Single,ps:0},{n:"height",pt:$n[1].Single,ps:1},{n:"nearPlaneDistance",pt:$n[1].Single,ps:2},{n:"farPlaneDistance",pt:$n[1].Single,ps:3}],sn:"CreatePerspective",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreatePerspective",is:!0,t:8,pi:[{n:"width",pt:$n[1].Single,ps:0},{n:"height",pt:$n[1].Single,ps:1},{n:"nearPlaneDistance",pt:$n[1].Single,ps:2},{n:"farPlaneDistance",pt:$n[1].Single,ps:3},{n:"result",out:!0,pt:$n[0].Matrix,ps:4}],sn:"CreatePerspective$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreatePerspectiveFieldOfView",is:!0,t:8,pi:[{n:"fieldOfView",pt:$n[1].Single,ps:0},{n:"aspectRatio",pt:$n[1].Single,ps:1},{n:"nearPlaneDistance",pt:$n[1].Single,ps:2},{n:"farPlaneDistance",pt:$n[1].Single,ps:3}],sn:"CreatePerspectiveFieldOfView",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreatePerspectiveFieldOfView",is:!0,t:8,pi:[{n:"fieldOfView",pt:$n[1].Single,ps:0},{n:"aspectRatio",pt:$n[1].Single,ps:1},{n:"nearPlaneDistance",pt:$n[1].Single,ps:2},{n:"farPlaneDistance",pt:$n[1].Single,ps:3},{n:"result",out:!0,pt:$n[0].Matrix,ps:4}],sn:"CreatePerspectiveFieldOfView$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreatePerspectiveOffCenter",is:!0,t:8,pi:[{n:"viewingVolume",pt:$n[0].Rectangle,ps:0},{n:"nearPlaneDistance",pt:$n[1].Single,ps:1},{n:"farPlaneDistance",pt:$n[1].Single,ps:2}],sn:"CreatePerspectiveOffCenter",rt:$n[0].Matrix,p:[$n[0].Rectangle,$n[1].Single,$n[1].Single]},{a:2,n:"CreatePerspectiveOffCenter",is:!0,t:8,pi:[{n:"left",pt:$n[1].Single,ps:0},{n:"right",pt:$n[1].Single,ps:1},{n:"bottom",pt:$n[1].Single,ps:2},{n:"top",pt:$n[1].Single,ps:3},{n:"nearPlaneDistance",pt:$n[1].Single,ps:4},{n:"farPlaneDistance",pt:$n[1].Single,ps:5}],sn:"CreatePerspectiveOffCenter$1",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreatePerspectiveOffCenter",is:!0,t:8,pi:[{n:"left",pt:$n[1].Single,ps:0},{n:"right",pt:$n[1].Single,ps:1},{n:"bottom",pt:$n[1].Single,ps:2},{n:"top",pt:$n[1].Single,ps:3},{n:"nearPlaneDistance",pt:$n[1].Single,ps:4},{n:"farPlaneDistance",pt:$n[1].Single,ps:5},{n:"result",out:!0,pt:$n[0].Matrix,ps:6}],sn:"CreatePerspectiveOffCenter$2",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateReflection",is:!0,t:8,pi:[{n:"value",pt:$n[0].Plane,ps:0}],sn:"CreateReflection",rt:$n[0].Matrix,p:[$n[0].Plane]},{a:2,n:"CreateReflection",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateReflection$1",rt:$n[1].Void,p:[$n[0].Plane,$n[0].Matrix]},{a:2,n:"CreateRotationX",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0}],sn:"CreateRotationX",rt:$n[0].Matrix,p:[$n[1].Single]},{a:2,n:"CreateRotationX",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateRotationX$1",rt:$n[1].Void,p:[$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateRotationY",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0}],sn:"CreateRotationY",rt:$n[0].Matrix,p:[$n[1].Single]},{a:2,n:"CreateRotationY",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateRotationY$1",rt:$n[1].Void,p:[$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateRotationZ",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0}],sn:"CreateRotationZ",rt:$n[0].Matrix,p:[$n[1].Single]},{a:2,n:"CreateRotationZ",is:!0,t:8,pi:[{n:"radians",pt:$n[1].Single,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateRotationZ$1",rt:$n[1].Void,p:[$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"scales",pt:$n[0].Vector3,ps:0}],sn:"CreateScale",rt:$n[0].Matrix,p:[$n[0].Vector3]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"scale",pt:$n[1].Single,ps:0}],sn:"CreateScale$1",rt:$n[0].Matrix,p:[$n[1].Single]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"scales",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateScale$3",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Matrix]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"scale",pt:$n[1].Single,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateScale$4",rt:$n[1].Void,p:[$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"xScale",pt:$n[1].Single,ps:0},{n:"yScale",pt:$n[1].Single,ps:1},{n:"zScale",pt:$n[1].Single,ps:2}],sn:"CreateScale$2",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateScale",is:!0,t:8,pi:[{n:"xScale",pt:$n[1].Single,ps:0},{n:"yScale",pt:$n[1].Single,ps:1},{n:"zScale",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"CreateScale$5",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateShadow",is:!0,t:8,pi:[{n:"lightDirection",pt:$n[0].Vector3,ps:0},{n:"plane",pt:$n[0].Plane,ps:1}],sn:"CreateShadow",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[0].Plane]},{a:2,n:"CreateShadow",is:!0,t:8,pi:[{n:"lightDirection",ref:!0,pt:$n[0].Vector3,ps:0},{n:"plane",ref:!0,pt:$n[0].Plane,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"CreateShadow$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Plane,$n[0].Matrix]},{a:2,n:"CreateTranslation",is:!0,t:8,pi:[{n:"position",pt:$n[0].Vector3,ps:0}],sn:"CreateTranslation",rt:$n[0].Matrix,p:[$n[0].Vector3]},{a:2,n:"CreateTranslation",is:!0,t:8,pi:[{n:"position",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"CreateTranslation$2",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Matrix]},{a:2,n:"CreateTranslation",is:!0,t:8,pi:[{n:"xPosition",pt:$n[1].Single,ps:0},{n:"yPosition",pt:$n[1].Single,ps:1},{n:"zPosition",pt:$n[1].Single,ps:2}],sn:"CreateTranslation$1",rt:$n[0].Matrix,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateTranslation",is:!0,t:8,pi:[{n:"xPosition",pt:$n[1].Single,ps:0},{n:"yPosition",pt:$n[1].Single,ps:1},{n:"zPosition",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"CreateTranslation$3",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Matrix]},{a:2,n:"CreateWorld",is:!0,t:8,pi:[{n:"position",pt:$n[0].Vector3,ps:0},{n:"forward",pt:$n[0].Vector3,ps:1},{n:"up",pt:$n[0].Vector3,ps:2}],sn:"CreateWorld",rt:$n[0].Matrix,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"CreateWorld",is:!0,t:8,pi:[{n:"position",ref:!0,pt:$n[0].Vector3,ps:0},{n:"forward",ref:!0,pt:$n[0].Vector3,ps:1},{n:"up",ref:!0,pt:$n[0].Vector3,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"CreateWorld$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Matrix]},{a:2,n:"Decompose",t:8,pi:[{n:"scale",out:!0,pt:$n[0].Vector3,ps:0},{n:"rotation",out:!0,pt:$n[0].Quaternion,ps:1},{n:"translation",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Decompose",rt:$n[1].Boolean,p:[$n[0].Vector3,$n[0].Quaternion,$n[0].Vector3]},{a:2,n:"Determinant",t:8,sn:"Determinant",rt:$n[1].Single},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"Divide",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"Divide$1",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"matrix2",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Divide$2",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"divider",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Divide$3",rt:$n[1].Void,p:[$n[0].Matrix,$n[1].Single,$n[0].Matrix]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Matrix,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Matrix]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{a:1,n:"FindDeterminants",is:!0,t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"major",out:!0,pt:$n[1].Single,ps:1},{n:"minor1",out:!0,pt:$n[1].Single,ps:2},{n:"minor2",out:!0,pt:$n[1].Single,ps:3},{n:"minor3",out:!0,pt:$n[1].Single,ps:4},{n:"minor4",out:!0,pt:$n[1].Single,ps:5},{n:"minor5",out:!0,pt:$n[1].Single,ps:6},{n:"minor6",out:!0,pt:$n[1].Single,ps:7},{n:"minor7",out:!0,pt:$n[1].Single,ps:8},{n:"minor8",out:!0,pt:$n[1].Single,ps:9},{n:"minor9",out:!0,pt:$n[1].Single,ps:10},{n:"minor10",out:!0,pt:$n[1].Single,ps:11},{n:"minor11",out:!0,pt:$n[1].Single,ps:12},{n:"minor12",out:!0,pt:$n[1].Single,ps:13}],sn:"FindDeterminants",rt:$n[1].Void,p:[$n[0].Matrix,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Invert",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"Invert",rt:$n[0].Matrix,p:[$n[0].Matrix]},{a:2,n:"Invert",is:!0,t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"Invert$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix,$n[1].Single]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"matrix2",ref:!0,pt:$n[0].Matrix,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Matrix,ps:3}],sn:"Lerp$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix,$n[1].Single,$n[0].Matrix]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"Multiply",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"Multiply$1",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"matrix2",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Multiply$2",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Multiply$3",rt:$n[1].Void,p:[$n[0].Matrix,$n[1].Single,$n[0].Matrix]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"Negate",rt:$n[0].Matrix,p:[$n[0].Matrix]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"Negate$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"Subtract",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"matrix1",ref:!0,pt:$n[0].Matrix,ps:0},{n:"matrix2",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Matrix,ps:2}],sn:"Subtract$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix,$n[0].Matrix]},{a:2,n:"ToFloatArray",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"ToFloatArray",rt:$n[1].Array.type(System.Single),p:[$n[0].Matrix]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transpose",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"Transpose",rt:$n[0].Matrix,p:[$n[0].Matrix]},{a:2,n:"Transpose",is:!0,t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"result",out:!0,pt:$n[0].Matrix,ps:1}],sn:"Transpose$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Addition",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Division",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"op_Division$1",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[1].Single]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Multiply",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"op_Multiply$1",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[1].Single]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"matrix1",pt:$n[0].Matrix,ps:0},{n:"matrix2",pt:$n[0].Matrix,ps:1}],sn:"op_Subtraction",rt:$n[0].Matrix,p:[$n[0].Matrix,$n[0].Matrix]},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"op_UnaryNegation",rt:$n[0].Matrix,p:[$n[0].Matrix]},{a:2,n:"Backward",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Backward",t:8,rt:$n[0].Vector3,fg:"Backward"},s:{a:2,n:"set_Backward",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Backward"},fn:"Backward"},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Down",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Down",t:8,rt:$n[0].Vector3,fg:"Down"},s:{a:2,n:"set_Down",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Down"},fn:"Down"},{a:2,n:"Forward",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Forward",t:8,rt:$n[0].Vector3,fg:"Forward"},s:{a:2,n:"set_Forward",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Forward"},fn:"Forward"},{a:2,n:"Identity",is:!0,t:16,rt:$n[0].Matrix,g:{a:2,n:"get_Identity",t:8,rt:$n[0].Matrix,fg:"Identity",is:!0},fn:"Identity"},{a:2,n:"Item",t:16,rt:$n[1].Single,p:[$n[1].Int32],i:!0,ipi:[{n:"index",pt:$n[1].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0}],sn:"getItem",rt:$n[1].Single,p:[$n[1].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0},{n:"value",pt:$n[1].Single,ps:1}],sn:"setItem",rt:$n[1].Void,p:[$n[1].Int32,$n[1].Single]}},{a:2,n:"Item",t:16,rt:$n[1].Single,p:[$n[1].Int32,$n[1].Int32],i:!0,ipi:[{n:"row",pt:$n[1].Int32,ps:0},{n:"column",pt:$n[1].Int32,ps:1}],g:{a:2,n:"get_Item",t:8,pi:[{n:"row",pt:$n[1].Int32,ps:0},{n:"column",pt:$n[1].Int32,ps:1}],sn:"getItem$1",rt:$n[1].Single,p:[$n[1].Int32,$n[1].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"row",pt:$n[1].Int32,ps:0},{n:"column",pt:$n[1].Int32,ps:1},{n:"value",pt:$n[1].Single,ps:2}],sn:"setItem$1",rt:$n[1].Void,p:[$n[1].Int32,$n[1].Int32,$n[1].Single]}},{a:2,n:"Left",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Left",t:8,rt:$n[0].Vector3,fg:"Left"},s:{a:2,n:"set_Left",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Left"},fn:"Left"},{a:2,n:"Right",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Right",t:8,rt:$n[0].Vector3,fg:"Right"},s:{a:2,n:"set_Right",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Right"},fn:"Right"},{a:2,n:"Translation",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Translation",t:8,rt:$n[0].Vector3,fg:"Translation"},s:{a:2,n:"set_Translation",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Translation"},fn:"Translation"},{a:2,n:"Up",t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Up",t:8,rt:$n[0].Vector3,fg:"Up"},s:{a:2,n:"set_Up",t:8,p:[$n[0].Vector3],rt:$n[1].Void,fs:"Up"},fn:"Up"},{a:2,n:"M11",t:4,rt:$n[1].Single,sn:"M11"},{a:2,n:"M12",t:4,rt:$n[1].Single,sn:"M12"},{a:2,n:"M13",t:4,rt:$n[1].Single,sn:"M13"},{a:2,n:"M14",t:4,rt:$n[1].Single,sn:"M14"},{a:2,n:"M21",t:4,rt:$n[1].Single,sn:"M21"},{a:2,n:"M22",t:4,rt:$n[1].Single,sn:"M22"},{a:2,n:"M23",t:4,rt:$n[1].Single,sn:"M23"},{a:2,n:"M24",t:4,rt:$n[1].Single,sn:"M24"},{a:2,n:"M31",t:4,rt:$n[1].Single,sn:"M31"},{a:2,n:"M32",t:4,rt:$n[1].Single,sn:"M32"},{a:2,n:"M33",t:4,rt:$n[1].Single,sn:"M33"},{a:2,n:"M34",t:4,rt:$n[1].Single,sn:"M34"},{a:2,n:"M41",t:4,rt:$n[1].Single,sn:"M41"},{a:2,n:"M42",t:4,rt:$n[1].Single,sn:"M42"},{a:2,n:"M43",t:4,rt:$n[1].Single,sn:"M43"},{a:2,n:"M44",t:4,rt:$n[1].Single,sn:"M44"},{a:1,n:"identity",is:!0,t:4,rt:$n[0].Matrix,sn:"identity"}]}});$m($n[0].PlaneHelper,function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ClassifyPoint",is:!0,t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0},{n:"plane",ref:!0,pt:$n[0].Plane,ps:1}],sn:"ClassifyPoint",rt:$n[1].Single,p:[$n[0].Vector3,$n[0].Plane]},{a:2,n:"PerpendicularDistance",is:!0,t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0},{n:"plane",ref:!0,pt:$n[0].Plane,ps:1}],sn:"PerpendicularDistance",rt:$n[1].Single,p:[$n[0].Vector3,$n[0].Plane]}]}});$m($n[0].Plane,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector4],pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[1].Single],pi:[{n:"normal",pt:$n[0].Vector3,ps:0},{n:"d",pt:$n[1].Single,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3],pi:[{n:"a",pt:$n[0].Vector3,ps:0},{n:"b",pt:$n[0].Vector3,ps:1},{n:"c",pt:$n[0].Vector3,ps:2}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"a",pt:$n[1].Single,ps:0},{n:"b",pt:$n[1].Single,ps:1},{n:"c",pt:$n[1].Single,ps:2},{n:"d",pt:$n[1].Single,ps:3}],sn:"$ctor4"},{a:2,n:"Dot",t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"Dot",rt:$n[1].Single,p:[$n[0].Vector4]},{a:2,n:"Dot",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector4,ps:0},{n:"result",out:!0,pt:$n[1].Single,ps:1}],sn:"Dot$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[1].Single]},{a:2,n:"DotCoordinate",t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0}],sn:"DotCoordinate",rt:$n[1].Single,p:[$n[0].Vector3]},{a:2,n:"DotCoordinate",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[1].Single,ps:1}],sn:"DotCoordinate$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"DotNormal",t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0}],sn:"DotNormal",rt:$n[1].Single,p:[$n[0].Vector3]},{a:2,n:"DotNormal",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[1].Single,ps:1}],sn:"DotNormal$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Plane,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Plane]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Intersects",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Intersects",rt:$n[0].PlaneIntersectionType,p:[$n[0].BoundingBox]},{a:2,n:"Intersects",t:8,pi:[{n:"frustum",pt:$n[0].BoundingFrustum,ps:0}],sn:"Intersects$1",rt:$n[0].PlaneIntersectionType,p:[$n[0].BoundingFrustum]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Intersects$2",rt:$n[0].PlaneIntersectionType,p:[$n[0].BoundingSphere]},{a:4,n:"Intersects",t:8,pi:[{n:"point",ref:!0,pt:$n[0].Vector3,ps:0}],sn:"Intersects$5",rt:$n[0].PlaneIntersectionType,p:[$n[0].Vector3]},{a:2,n:"Intersects",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[0].PlaneIntersectionType,ps:1}],sn:"Intersects$3",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[0].PlaneIntersectionType]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[0].PlaneIntersectionType,ps:1}],sn:"Intersects$4",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[0].PlaneIntersectionType]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[1].Void},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",pt:$n[0].Plane,ps:0}],sn:"Normalize",rt:$n[0].Plane,p:[$n[0].Plane]},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[0].Plane,ps:1}],sn:"Normalize$1",rt:$n[1].Void,p:[$n[0].Plane,$n[0].Plane]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform",rt:$n[0].Plane,p:[$n[0].Plane,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$1",rt:$n[0].Plane,p:[$n[0].Plane,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Plane,ps:2}],sn:"Transform$2",rt:$n[1].Void,p:[$n[0].Plane,$n[0].Matrix,$n[0].Plane]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Plane,ps:2}],sn:"Transform$3",rt:$n[1].Void,p:[$n[0].Plane,$n[0].Quaternion,$n[0].Plane]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"plane1",pt:$n[0].Plane,ps:0},{n:"plane2",pt:$n[0].Plane,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Plane,$n[0].Plane]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"plane1",pt:$n[0].Plane,ps:0},{n:"plane2",pt:$n[0].Plane,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Plane,$n[0].Plane]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"D",t:4,rt:$n[1].Single,sn:"D"},{a:2,n:"Normal",t:4,rt:$n[0].Vector3,sn:"Normal"}]}});$m($n[0].PlaneIntersectionType,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Back",is:!0,t:4,rt:$n[0].PlaneIntersectionType,sn:"Back"},{a:2,n:"Front",is:!0,t:4,rt:$n[0].PlaneIntersectionType,sn:"Front"},{a:2,n:"Intersecting",is:!0,t:4,rt:$n[0].PlaneIntersectionType,sn:"Intersecting"}]}});$m($n[0].PlayerIndex,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Four",is:!0,t:4,rt:$n[0].PlayerIndex,sn:"Four"},{a:2,n:"One",is:!0,t:4,rt:$n[0].PlayerIndex,sn:"One"},{a:2,n:"Three",is:!0,t:4,rt:$n[0].PlayerIndex,sn:"Three"},{a:2,n:"Two",is:!0,t:4,rt:$n[0].PlayerIndex,sn:"Two"}]}});$m($n[0].Point,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Int32],pi:[{n:"value",pt:$n[1].Int32,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Int32,$n[1].Int32],pi:[{n:"x",pt:$n[1].Int32,ps:0},{n:"y",pt:$n[1].Int32,ps:1}],sn:"$ctor2"},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Point,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Point]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"ToVector2",t:8,sn:"ToVector2",rt:$n[0].Vector2},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Point,ps:0},{n:"value2",pt:$n[0].Point,ps:1}],sn:"op_Addition",rt:$n[0].Point,p:[$n[0].Point,$n[0].Point]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"source",pt:$n[0].Point,ps:0},{n:"divisor",pt:$n[0].Point,ps:1}],sn:"op_Division",rt:$n[0].Point,p:[$n[0].Point,$n[0].Point]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Point,ps:0},{n:"b",pt:$n[0].Point,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Point,$n[0].Point]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Point,ps:0},{n:"b",pt:$n[0].Point,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Point,$n[0].Point]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Point,ps:0},{n:"value2",pt:$n[0].Point,ps:1}],sn:"op_Multiply",rt:$n[0].Point,p:[$n[0].Point,$n[0].Point]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Point,ps:0},{n:"value2",pt:$n[0].Point,ps:1}],sn:"op_Subtraction",rt:$n[0].Point,p:[$n[0].Point,$n[0].Point]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Zero",is:!0,t:16,rt:$n[0].Point,g:{a:2,n:"get_Zero",t:8,rt:$n[0].Point,fg:"Zero",is:!0},fn:"Zero"},{a:2,n:"X",t:4,rt:$n[1].Int32,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Int32,sn:"Y"},{a:1,n:"zeroPoint",is:!0,t:4,rt:$n[0].Point,sn:"zeroPoint",ro:!0}]}});$m($n[0].Quaternion,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector4],pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[1].Single],pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"w",pt:$n[1].Single,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"x",pt:$n[1].Single,ps:0},{n:"y",pt:$n[1].Single,ps:1},{n:"z",pt:$n[1].Single,ps:2},{n:"w",pt:$n[1].Single,ps:3}],sn:"$ctor3"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"Add",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Add",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Add$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Concatenate",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Quaternion,ps:0},{n:"value2",pt:$n[0].Quaternion,ps:1}],sn:"Concatenate",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Concatenate",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"value2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Concatenate$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Conjugate",t:8,sn:"Conjugate",rt:$n[1].Void},{a:2,n:"Conjugate",is:!0,t:8,pi:[{n:"value",pt:$n[0].Quaternion,ps:0}],sn:"Conjugate",rt:$n[0].Quaternion,p:[$n[0].Quaternion]},{a:2,n:"Conjugate",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"result",out:!0,pt:$n[0].Quaternion,ps:1}],sn:"Conjugate$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"CreateFromAxisAngle",is:!0,t:8,pi:[{n:"axis",pt:$n[0].Vector3,ps:0},{n:"angle",pt:$n[1].Single,ps:1}],sn:"CreateFromAxisAngle",rt:$n[0].Quaternion,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"CreateFromAxisAngle",is:!0,t:8,pi:[{n:"axis",ref:!0,pt:$n[0].Vector3,ps:0},{n:"angle",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"CreateFromAxisAngle$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single,$n[0].Quaternion]},{a:2,n:"CreateFromRotationMatrix",is:!0,t:8,pi:[{n:"matrix",pt:$n[0].Matrix,ps:0}],sn:"CreateFromRotationMatrix",rt:$n[0].Quaternion,p:[$n[0].Matrix]},{a:2,n:"CreateFromRotationMatrix",is:!0,t:8,pi:[{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:0},{n:"result",out:!0,pt:$n[0].Quaternion,ps:1}],sn:"CreateFromRotationMatrix$1",rt:$n[1].Void,p:[$n[0].Matrix,$n[0].Quaternion]},{a:2,n:"CreateFromYawPitchRoll",is:!0,t:8,pi:[{n:"yaw",pt:$n[1].Single,ps:0},{n:"pitch",pt:$n[1].Single,ps:1},{n:"roll",pt:$n[1].Single,ps:2}],sn:"CreateFromYawPitchRoll",rt:$n[0].Quaternion,p:[$n[1].Single,$n[1].Single,$n[1].Single]},{a:2,n:"CreateFromYawPitchRoll",is:!0,t:8,pi:[{n:"yaw",pt:$n[1].Single,ps:0},{n:"pitch",pt:$n[1].Single,ps:1},{n:"roll",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Quaternion,ps:3}],sn:"CreateFromYawPitchRoll$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[0].Quaternion]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"Divide",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Divide$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"Dot",rt:$n[1].Single,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Dot$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Quaternion,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Quaternion]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Inverse",is:!0,t:8,pi:[{n:"quaternion",pt:$n[0].Quaternion,ps:0}],sn:"Inverse",rt:$n[0].Quaternion,p:[$n[0].Quaternion]},{a:2,n:"Inverse",is:!0,t:8,pi:[{n:"quaternion",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"result",out:!0,pt:$n[0].Quaternion,ps:1}],sn:"Inverse$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Length",t:8,sn:"Length",rt:$n[1].Single},{a:2,n:"LengthSquared",t:8,sn:"LengthSquared",rt:$n[1].Single},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion,$n[1].Single]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Quaternion,ps:3}],sn:"Lerp$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[1].Single,$n[0].Quaternion]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"Multiply",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"Multiply$1",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Multiply$2",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Multiply$3",rt:$n[1].Void,p:[$n[0].Quaternion,$n[1].Single,$n[0].Quaternion]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"quaternion",pt:$n[0].Quaternion,ps:0}],sn:"Negate",rt:$n[0].Quaternion,p:[$n[0].Quaternion]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"quaternion",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"result",out:!0,pt:$n[0].Quaternion,ps:1}],sn:"Negate$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[1].Void},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"quaternion",pt:$n[0].Quaternion,ps:0}],sn:"Normalize",rt:$n[0].Quaternion,p:[$n[0].Quaternion]},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"quaternion",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"result",out:!0,pt:$n[0].Quaternion,ps:1}],sn:"Normalize$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Slerp",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Slerp",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion,$n[1].Single]},{a:2,n:"Slerp",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Quaternion,ps:3}],sn:"Slerp$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[1].Single,$n[0].Quaternion]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"Subtract",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"quaternion1",ref:!0,pt:$n[0].Quaternion,ps:0},{n:"quaternion2",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Quaternion,ps:2}],sn:"Subtract$1",rt:$n[1].Void,p:[$n[0].Quaternion,$n[0].Quaternion,$n[0].Quaternion]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"ToVector4",t:8,sn:"ToVector4",rt:$n[0].Vector4},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Addition",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Division",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Multiply",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"op_Multiply$1",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[1].Single]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"quaternion1",pt:$n[0].Quaternion,ps:0},{n:"quaternion2",pt:$n[0].Quaternion,ps:1}],sn:"op_Subtraction",rt:$n[0].Quaternion,p:[$n[0].Quaternion,$n[0].Quaternion]},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"quaternion",pt:$n[0].Quaternion,ps:0}],sn:"op_UnaryNegation",rt:$n[0].Quaternion,p:[$n[0].Quaternion]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Identity",is:!0,t:16,rt:$n[0].Quaternion,g:{a:2,n:"get_Identity",t:8,rt:$n[0].Quaternion,fg:"Identity",is:!0},fn:"Identity"},{a:2,n:"W",t:4,rt:$n[1].Single,sn:"W"},{a:2,n:"X",t:4,rt:$n[1].Single,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Single,sn:"Y"},{a:2,n:"Z",t:4,rt:$n[1].Single,sn:"Z"},{a:1,n:"_identity",is:!0,t:4,rt:$n[0].Quaternion,sn:"_identity",ro:!0}]}});$m($n[0].Ray,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[0].Vector3],pi:[{n:"position",pt:$n[0].Vector3,ps:0},{n:"direction",pt:$n[0].Vector3,ps:1}],sn:"$ctor1"},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Ray,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Ray]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Intersects",t:8,pi:[{n:"box",pt:$n[0].BoundingBox,ps:0}],sn:"Intersects",rt:$n[1].Nullable$1(System.Single),p:[$n[0].BoundingBox]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",pt:$n[0].BoundingSphere,ps:0}],sn:"Intersects$1",rt:$n[1].Nullable$1(System.Single),p:[$n[0].BoundingSphere]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",pt:$n[0].Plane,ps:0}],sn:"Intersects$2",rt:$n[1].Nullable$1(System.Single),p:[$n[0].Plane]},{a:2,n:"Intersects",t:8,pi:[{n:"box",ref:!0,pt:$n[0].BoundingBox,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$3",rt:$n[1].Void,p:[$n[0].BoundingBox,$n[1].Nullable$1(System.Single)]},{a:2,n:"Intersects",t:8,pi:[{n:"sphere",ref:!0,pt:$n[0].BoundingSphere,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$4",rt:$n[1].Void,p:[$n[0].BoundingSphere,$n[1].Nullable$1(System.Single)]},{a:2,n:"Intersects",t:8,pi:[{n:"plane",ref:!0,pt:$n[0].Plane,ps:0},{n:"result",out:!0,pt:$n[1].Nullable$1(System.Single),ps:1}],sn:"Intersects$5",rt:$n[1].Void,p:[$n[0].Plane,$n[1].Nullable$1(System.Single)]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Ray,ps:0},{n:"b",pt:$n[0].Ray,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Ray,$n[0].Ray]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Ray,ps:0},{n:"b",pt:$n[0].Ray,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Ray,$n[0].Ray]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Direction",t:4,rt:$n[0].Vector3,sn:"Direction"},{a:2,n:"Position",t:4,rt:$n[0].Vector3,sn:"Position"}]}});$m($n[0].Rectangle,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Point,$n[0].Point],pi:[{n:"location",pt:$n[0].Point,ps:0},{n:"size",pt:$n[0].Point,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Int32,$n[1].Int32,$n[1].Int32,$n[1].Int32],pi:[{n:"x",pt:$n[1].Int32,ps:0},{n:"y",pt:$n[1].Int32,ps:1},{n:"width",pt:$n[1].Int32,ps:2},{n:"height",pt:$n[1].Int32,ps:3}],sn:"$ctor2"},{a:2,n:"Contains",t:8,pi:[{n:"value",pt:$n[0].Point,ps:0}],sn:"Contains",rt:$n[1].Boolean,p:[$n[0].Point]},{a:2,n:"Contains",t:8,pi:[{n:"value",pt:$n[0].Rectangle,ps:0}],sn:"Contains$1",rt:$n[1].Boolean,p:[$n[0].Rectangle]},{a:2,n:"Contains",t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0}],sn:"Contains$2",rt:$n[1].Boolean,p:[$n[0].Vector2]},{a:2,n:"Contains",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Point,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Contains$5",rt:$n[1].Void,p:[$n[0].Point,$n[1].Boolean]},{a:2,n:"Contains",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Rectangle,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Contains$6",rt:$n[1].Void,p:[$n[0].Rectangle,$n[1].Boolean]},{a:2,n:"Contains",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Contains$7",rt:$n[1].Void,p:[$n[0].Vector2,$n[1].Boolean]},{a:2,n:"Contains",t:8,pi:[{n:"x",pt:$n[1].Int32,ps:0},{n:"y",pt:$n[1].Int32,ps:1}],sn:"Contains$3",rt:$n[1].Boolean,p:[$n[1].Int32,$n[1].Int32]},{a:2,n:"Contains",t:8,pi:[{n:"x",pt:$n[1].Single,ps:0},{n:"y",pt:$n[1].Single,ps:1}],sn:"Contains$4",rt:$n[1].Boolean,p:[$n[1].Single,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Rectangle,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Rectangle]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Inflate",t:8,pi:[{n:"horizontalAmount",pt:$n[1].Int32,ps:0},{n:"verticalAmount",pt:$n[1].Int32,ps:1}],sn:"Inflate",rt:$n[1].Void,p:[$n[1].Int32,$n[1].Int32]},{a:2,n:"Inflate",t:8,pi:[{n:"horizontalAmount",pt:$n[1].Single,ps:0},{n:"verticalAmount",pt:$n[1].Single,ps:1}],sn:"Inflate$1",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single]},{a:2,n:"Intersect",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Rectangle,ps:0},{n:"value2",pt:$n[0].Rectangle,ps:1}],sn:"Intersect",rt:$n[0].Rectangle,p:[$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"Intersect",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Rectangle,ps:0},{n:"value2",ref:!0,pt:$n[0].Rectangle,ps:1},{n:"result",out:!0,pt:$n[0].Rectangle,ps:2}],sn:"Intersect$1",rt:$n[1].Void,p:[$n[0].Rectangle,$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"Intersects",t:8,pi:[{n:"value",pt:$n[0].Rectangle,ps:0}],sn:"Intersects",rt:$n[1].Boolean,p:[$n[0].Rectangle]},{a:2,n:"Intersects",t:8,pi:[{n:"value",ref:!0,pt:$n[0].Rectangle,ps:0},{n:"result",out:!0,pt:$n[1].Boolean,ps:1}],sn:"Intersects$1",rt:$n[1].Void,p:[$n[0].Rectangle,$n[1].Boolean]},{a:2,n:"Offset",t:8,pi:[{n:"amount",pt:$n[0].Point,ps:0}],sn:"Offset",rt:$n[1].Void,p:[$n[0].Point]},{a:2,n:"Offset",t:8,pi:[{n:"amount",pt:$n[0].Vector2,ps:0}],sn:"Offset$1",rt:$n[1].Void,p:[$n[0].Vector2]},{a:2,n:"Offset",t:8,pi:[{n:"offsetX",pt:$n[1].Int32,ps:0},{n:"offsetY",pt:$n[1].Int32,ps:1}],sn:"Offset$2",rt:$n[1].Void,p:[$n[1].Int32,$n[1].Int32]},{a:2,n:"Offset",t:8,pi:[{n:"offsetX",pt:$n[1].Single,ps:0},{n:"offsetY",pt:$n[1].Single,ps:1}],sn:"Offset$3",rt:$n[1].Void,p:[$n[1].Single,$n[1].Single]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Union",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Rectangle,ps:0},{n:"value2",pt:$n[0].Rectangle,ps:1}],sn:"Union",rt:$n[0].Rectangle,p:[$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"Union",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Rectangle,ps:0},{n:"value2",ref:!0,pt:$n[0].Rectangle,ps:1},{n:"result",out:!0,pt:$n[0].Rectangle,ps:2}],sn:"Union$1",rt:$n[1].Void,p:[$n[0].Rectangle,$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Rectangle,ps:0},{n:"b",pt:$n[0].Rectangle,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[0].Rectangle,ps:0},{n:"b",pt:$n[0].Rectangle,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Rectangle,$n[0].Rectangle]},{a:2,n:"Bottom",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Bottom",t:8,rt:$n[1].Int32,fg:"Bottom"},fn:"Bottom"},{a:2,n:"Center",t:16,rt:$n[0].Point,g:{a:2,n:"get_Center",t:8,rt:$n[0].Point,fg:"Center"},fn:"Center"},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Empty",is:!0,t:16,rt:$n[0].Rectangle,g:{a:2,n:"get_Empty",t:8,rt:$n[0].Rectangle,fg:"Empty",is:!0},fn:"Empty"},{a:2,n:"IsEmpty",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsEmpty",t:8,rt:$n[1].Boolean,fg:"IsEmpty"},fn:"IsEmpty"},{a:2,n:"Left",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Left",t:8,rt:$n[1].Int32,fg:"Left"},fn:"Left"},{a:2,n:"Location",t:16,rt:$n[0].Point,g:{a:2,n:"get_Location",t:8,rt:$n[0].Point,fg:"Location"},s:{a:2,n:"set_Location",t:8,p:[$n[0].Point],rt:$n[1].Void,fs:"Location"},fn:"Location"},{a:2,n:"Right",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Right",t:8,rt:$n[1].Int32,fg:"Right"},fn:"Right"},{a:2,n:"Size",t:16,rt:$n[0].Point,g:{a:2,n:"get_Size",t:8,rt:$n[0].Point,fg:"Size"},s:{a:2,n:"set_Size",t:8,p:[$n[0].Point],rt:$n[1].Void,fs:"Size"},fn:"Size"},{a:2,n:"Top",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Top",t:8,rt:$n[1].Int32,fg:"Top"},fn:"Top"},{a:2,n:"Height",t:4,rt:$n[1].Int32,sn:"Height"},{a:2,n:"Width",t:4,rt:$n[1].Int32,sn:"Width"},{a:2,n:"X",t:4,rt:$n[1].Int32,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Int32,sn:"Y"},{a:1,n:"emptyRectangle",is:!0,t:4,rt:$n[0].Rectangle,sn:"emptyRectangle"}]}});$m($n[0].Vector2,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Single],pi:[{n:"value",pt:$n[1].Single,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single],pi:[{n:"x",pt:$n[1].Single,ps:0},{n:"y",pt:$n[1].Single,ps:1}],sn:"$ctor2"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Add",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Add$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1},{n:"value3",pt:$n[0].Vector2,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4}],sn:"Barycentric",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[1].Single]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector2,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector2,ps:5}],sn:"Barycentric$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[1].Single,$n[0].Vector2]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1},{n:"value3",pt:$n[0].Vector2,ps:2},{n:"value4",pt:$n[0].Vector2,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"CatmullRom",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector2,ps:2},{n:"value4",ref:!0,pt:$n[0].Vector2,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector2,ps:5}],sn:"CatmullRom$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"min",pt:$n[0].Vector2,ps:1},{n:"max",pt:$n[0].Vector2,ps:2}],sn:"Clamp",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"min",ref:!0,pt:$n[0].Vector2,ps:1},{n:"max",ref:!0,pt:$n[0].Vector2,ps:2},{n:"result",out:!0,pt:$n[0].Vector2,ps:3}],sn:"Clamp$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Distance",rt:$n[1].Single,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Distance$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"DistanceSquared",rt:$n[1].Single,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"DistanceSquared$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Divide",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"Divide$1",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Divide$2",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"divider",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Divide$3",rt:$n[1].Void,p:[$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Dot",rt:$n[1].Single,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Dot$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Vector2,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Vector2]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"tangent1",pt:$n[0].Vector2,ps:1},{n:"value2",pt:$n[0].Vector2,ps:2},{n:"tangent2",pt:$n[0].Vector2,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"Hermite",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"tangent1",ref:!0,pt:$n[0].Vector2,ps:1},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:2},{n:"tangent2",ref:!0,pt:$n[0].Vector2,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector2,ps:5}],sn:"Hermite$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Length",t:8,sn:"Length",rt:$n[1].Single},{a:2,n:"LengthSquared",t:8,sn:"LengthSquared",rt:$n[1].Single},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector2,ps:3}],sn:"Lerp$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"LerpPrecise",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector2,ps:3}],sn:"LerpPrecise$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Max",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Max$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Min",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Min$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Multiply",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"Multiply$1",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Multiply$2",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Multiply$3",rt:$n[1].Void,p:[$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0}],sn:"Negate",rt:$n[0].Vector2,p:[$n[0].Vector2]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"result",out:!0,pt:$n[0].Vector2,ps:1}],sn:"Negate$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[1].Void},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0}],sn:"Normalize",rt:$n[0].Vector2,p:[$n[0].Vector2]},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"result",out:!0,pt:$n[0].Vector2,ps:1}],sn:"Normalize$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Reflect",is:!0,t:8,pi:[{n:"vector",pt:$n[0].Vector2,ps:0},{n:"normal",pt:$n[0].Vector2,ps:1}],sn:"Reflect",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Reflect",is:!0,t:8,pi:[{n:"vector",ref:!0,pt:$n[0].Vector2,ps:0},{n:"normal",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Reflect$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"SmoothStep",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector2,ps:3}],sn:"SmoothStep$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[0].Vector2]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"Subtract",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector2,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector2,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Subtract$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Vector2,$n[0].Vector2]},{a:2,n:"ToPoint",t:8,sn:"ToPoint",rt:$n[0].Point},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"position",pt:$n[0].Vector2,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$1",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"position",ref:!0,pt:$n[0].Vector2,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Transform$2",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Matrix,$n[0].Vector2]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"Transform$3",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Quaternion,$n[0].Vector2]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:2}],sn:"Transform$4",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector2)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:2}],sn:"Transform$5",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector2)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$6",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[1].Int32]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$7",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[1].Int32]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"normal",pt:$n[0].Vector2,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"TransformNormal",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Matrix]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"normal",ref:!0,pt:$n[0].Vector2,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector2,ps:2}],sn:"TransformNormal$1",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Matrix,$n[0].Vector2]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:2}],sn:"TransformNormal$2",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector2)]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"TransformNormal$3",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector2),$n[1].Int32,$n[1].Int32]},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Addition",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Division",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"op_Division$1",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Multiply",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"op_Multiply$1",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"scaleFactor",pt:$n[1].Single,ps:0},{n:"value",pt:$n[0].Vector2,ps:1}],sn:"op_Multiply$2",rt:$n[0].Vector2,p:[$n[1].Single,$n[0].Vector2]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector2,ps:0},{n:"value2",pt:$n[0].Vector2,ps:1}],sn:"op_Subtraction",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[0].Vector2]},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0}],sn:"op_UnaryNegation",rt:$n[0].Vector2,p:[$n[0].Vector2]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"One",is:!0,t:16,rt:$n[0].Vector2,g:{a:2,n:"get_One",t:8,rt:$n[0].Vector2,fg:"One",is:!0},fn:"One"},{a:2,n:"UnitX",is:!0,t:16,rt:$n[0].Vector2,g:{a:2,n:"get_UnitX",t:8,rt:$n[0].Vector2,fg:"UnitX",is:!0},fn:"UnitX"},{a:2,n:"UnitY",is:!0,t:16,rt:$n[0].Vector2,g:{a:2,n:"get_UnitY",t:8,rt:$n[0].Vector2,fg:"UnitY",is:!0},fn:"UnitY"},{a:2,n:"Zero",is:!0,t:16,rt:$n[0].Vector2,g:{a:2,n:"get_Zero",t:8,rt:$n[0].Vector2,fg:"Zero",is:!0},fn:"Zero"},{a:2,n:"X",t:4,rt:$n[1].Single,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Single,sn:"Y"},{a:1,n:"unitVector",is:!0,t:4,rt:$n[0].Vector2,sn:"unitVector",ro:!0},{a:1,n:"unitXVector",is:!0,t:4,rt:$n[0].Vector2,sn:"unitXVector",ro:!0},{a:1,n:"unitYVector",is:!0,t:4,rt:$n[0].Vector2,sn:"unitYVector",ro:!0},{a:1,n:"zeroVector",is:!0,t:4,rt:$n[0].Vector2,sn:"zeroVector",ro:!0}]}});$m($n[0].Vector3,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Single],pi:[{n:"value",pt:$n[1].Single,ps:0}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[0].Vector2,$n[1].Single],pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"z",pt:$n[1].Single,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"x",pt:$n[1].Single,ps:0},{n:"y",pt:$n[1].Single,ps:1},{n:"z",pt:$n[1].Single,ps:2}],sn:"$ctor3"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Add",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Add$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1},{n:"value3",pt:$n[0].Vector3,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4}],sn:"Barycentric",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[1].Single]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector3,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector3,ps:5}],sn:"Barycentric$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[1].Single,$n[0].Vector3]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1},{n:"value3",pt:$n[0].Vector3,ps:2},{n:"value4",pt:$n[0].Vector3,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"CatmullRom",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector3,ps:2},{n:"value4",ref:!0,pt:$n[0].Vector3,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector3,ps:5}],sn:"CatmullRom$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"min",pt:$n[0].Vector3,ps:1},{n:"max",pt:$n[0].Vector3,ps:2}],sn:"Clamp",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"min",ref:!0,pt:$n[0].Vector3,ps:1},{n:"max",ref:!0,pt:$n[0].Vector3,ps:2},{n:"result",out:!0,pt:$n[0].Vector3,ps:3}],sn:"Clamp$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"vector1",pt:$n[0].Vector3,ps:0},{n:"vector2",pt:$n[0].Vector3,ps:1}],sn:"Cross",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"vector1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"vector2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Cross$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Distance",rt:$n[1].Single,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Distance$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"DistanceSquared",rt:$n[1].Single,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"DistanceSquared$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Divide",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"Divide$1",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Divide$2",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"divider",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Divide$3",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Dot",rt:$n[1].Single,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Dot$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Vector3,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Vector3]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"tangent1",pt:$n[0].Vector3,ps:1},{n:"value2",pt:$n[0].Vector3,ps:2},{n:"tangent2",pt:$n[0].Vector3,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"Hermite",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"tangent1",ref:!0,pt:$n[0].Vector3,ps:1},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:2},{n:"tangent2",ref:!0,pt:$n[0].Vector3,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector3,ps:5}],sn:"Hermite$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Length",t:8,sn:"Length",rt:$n[1].Single},{a:2,n:"LengthSquared",t:8,sn:"LengthSquared",rt:$n[1].Single},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector3,ps:3}],sn:"Lerp$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"LerpPrecise",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector3,ps:3}],sn:"LerpPrecise$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Max",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Max$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Min",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Min$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Multiply",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"Multiply$1",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Multiply$2",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Multiply$3",rt:$n[1].Void,p:[$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0}],sn:"Negate",rt:$n[0].Vector3,p:[$n[0].Vector3]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].Vector3,ps:1}],sn:"Negate$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[1].Void},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0}],sn:"Normalize",rt:$n[0].Vector3,p:[$n[0].Vector3]},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"result",out:!0,pt:$n[0].Vector3,ps:1}],sn:"Normalize$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Reflect",is:!0,t:8,pi:[{n:"vector",pt:$n[0].Vector3,ps:0},{n:"normal",pt:$n[0].Vector3,ps:1}],sn:"Reflect",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Reflect",is:!0,t:8,pi:[{n:"vector",ref:!0,pt:$n[0].Vector3,ps:0},{n:"normal",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Reflect$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"SmoothStep",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector3,ps:3}],sn:"SmoothStep$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[1].Single,$n[0].Vector3]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"Subtract",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector3,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector3,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Subtract$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Vector3,$n[0].Vector3]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"position",pt:$n[0].Vector3,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$1",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"position",ref:!0,pt:$n[0].Vector3,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Transform$2",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Matrix,$n[0].Vector3]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"Transform$3",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Quaternion,$n[0].Vector3]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:2}],sn:"Transform$4",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:2}],sn:"Transform$5",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$6",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[1].Int32]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$7",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[1].Int32]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"normal",pt:$n[0].Vector3,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"TransformNormal",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Matrix]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"normal",ref:!0,pt:$n[0].Vector3,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector3,ps:2}],sn:"TransformNormal$1",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Matrix,$n[0].Vector3]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:2}],sn:"TransformNormal$2",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector3)]},{a:2,n:"TransformNormal",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector3),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"TransformNormal$3",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector3),$n[1].Int32,$n[1].Int32]},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Addition",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Division",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"op_Division$1",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Multiply",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"op_Multiply$1",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[1].Single]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"scaleFactor",pt:$n[1].Single,ps:0},{n:"value",pt:$n[0].Vector3,ps:1}],sn:"op_Multiply$2",rt:$n[0].Vector3,p:[$n[1].Single,$n[0].Vector3]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector3,ps:0},{n:"value2",pt:$n[0].Vector3,ps:1}],sn:"op_Subtraction",rt:$n[0].Vector3,p:[$n[0].Vector3,$n[0].Vector3]},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0}],sn:"op_UnaryNegation",rt:$n[0].Vector3,p:[$n[0].Vector3]},{a:2,n:"Backward",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Backward",t:8,rt:$n[0].Vector3,fg:"Backward",is:!0},fn:"Backward"},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"Down",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Down",t:8,rt:$n[0].Vector3,fg:"Down",is:!0},fn:"Down"},{a:2,n:"Forward",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Forward",t:8,rt:$n[0].Vector3,fg:"Forward",is:!0},fn:"Forward"},{a:2,n:"Left",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Left",t:8,rt:$n[0].Vector3,fg:"Left",is:!0},fn:"Left"},{a:2,n:"One",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_One",t:8,rt:$n[0].Vector3,fg:"One",is:!0},fn:"One"},{a:2,n:"Right",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Right",t:8,rt:$n[0].Vector3,fg:"Right",is:!0},fn:"Right"},{a:2,n:"UnitX",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_UnitX",t:8,rt:$n[0].Vector3,fg:"UnitX",is:!0},fn:"UnitX"},{a:2,n:"UnitY",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_UnitY",t:8,rt:$n[0].Vector3,fg:"UnitY",is:!0},fn:"UnitY"},{a:2,n:"UnitZ",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_UnitZ",t:8,rt:$n[0].Vector3,fg:"UnitZ",is:!0},fn:"UnitZ"},{a:2,n:"Up",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Up",t:8,rt:$n[0].Vector3,fg:"Up",is:!0},fn:"Up"},{a:2,n:"Zero",is:!0,t:16,rt:$n[0].Vector3,g:{a:2,n:"get_Zero",t:8,rt:$n[0].Vector3,fg:"Zero",is:!0},fn:"Zero"},{a:2,n:"X",t:4,rt:$n[1].Single,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Single,sn:"Y"},{a:2,n:"Z",t:4,rt:$n[1].Single,sn:"Z"},{a:1,n:"backward",is:!0,t:4,rt:$n[0].Vector3,sn:"backward",ro:!0},{a:1,n:"down",is:!0,t:4,rt:$n[0].Vector3,sn:"down",ro:!0},{a:1,n:"forward",is:!0,t:4,rt:$n[0].Vector3,sn:"forward",ro:!0},{a:1,n:"left",is:!0,t:4,rt:$n[0].Vector3,sn:"left",ro:!0},{a:1,n:"one",is:!0,t:4,rt:$n[0].Vector3,sn:"one",ro:!0},{a:1,n:"right",is:!0,t:4,rt:$n[0].Vector3,sn:"right",ro:!0},{a:1,n:"unitX",is:!0,t:4,rt:$n[0].Vector3,sn:"unitX",ro:!0},{a:1,n:"unitY",is:!0,t:4,rt:$n[0].Vector3,sn:"unitY",ro:!0},{a:1,n:"unitZ",is:!0,t:4,rt:$n[0].Vector3,sn:"unitZ",ro:!0},{a:1,n:"up",is:!0,t:4,rt:$n[0].Vector3,sn:"up",ro:!0},{a:1,n:"zero",is:!0,t:4,rt:$n[0].Vector3,sn:"zero",ro:!0}]}});$m($n[0].Vector4,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Single],pi:[{n:"value",pt:$n[1].Single,ps:0}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[0].Vector3,$n[1].Single],pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"w",pt:$n[1].Single,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[0].Vector2,$n[1].Single,$n[1].Single],pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"z",pt:$n[1].Single,ps:1},{n:"w",pt:$n[1].Single,ps:2}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single,$n[1].Single,$n[1].Single],pi:[{n:"x",pt:$n[1].Single,ps:0},{n:"y",pt:$n[1].Single,ps:1},{n:"z",pt:$n[1].Single,ps:2},{n:"w",pt:$n[1].Single,ps:3}],sn:"$ctor4"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Add",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Add",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Add$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1},{n:"value3",pt:$n[0].Vector4,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4}],sn:"Barycentric",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[1].Single]},{a:2,n:"Barycentric",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector4,ps:2},{n:"amount1",pt:$n[1].Single,ps:3},{n:"amount2",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector4,ps:5}],sn:"Barycentric$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[1].Single,$n[0].Vector4]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1},{n:"value3",pt:$n[0].Vector4,ps:2},{n:"value4",pt:$n[0].Vector4,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"CatmullRom",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"CatmullRom",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"value3",ref:!0,pt:$n[0].Vector4,ps:2},{n:"value4",ref:!0,pt:$n[0].Vector4,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector4,ps:5}],sn:"CatmullRom$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"min",pt:$n[0].Vector4,ps:1},{n:"max",pt:$n[0].Vector4,ps:2}],sn:"Clamp",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"min",ref:!0,pt:$n[0].Vector4,ps:1},{n:"max",ref:!0,pt:$n[0].Vector4,ps:2},{n:"result",out:!0,pt:$n[0].Vector4,ps:3}],sn:"Clamp$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Distance",rt:$n[1].Single,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Distance",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Distance$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"DistanceSquared",rt:$n[1].Single,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"DistanceSquared",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"DistanceSquared$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Divide",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"Divide$1",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[1].Single]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Divide$2",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Divide",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"divider",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Divide$3",rt:$n[1].Void,p:[$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Dot",rt:$n[1].Single,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[1].Single,ps:2}],sn:"Dot$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[0].Vector4,ps:0}],sn:"equalsT",rt:$n[1].Boolean,p:[$n[0].Vector4]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"tangent1",pt:$n[0].Vector4,ps:1},{n:"value2",pt:$n[0].Vector4,ps:2},{n:"tangent2",pt:$n[0].Vector4,ps:3},{n:"amount",pt:$n[1].Single,ps:4}],sn:"Hermite",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"Hermite",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"tangent1",ref:!0,pt:$n[0].Vector4,ps:1},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:2},{n:"tangent2",ref:!0,pt:$n[0].Vector4,ps:3},{n:"amount",pt:$n[1].Single,ps:4},{n:"result",out:!0,pt:$n[0].Vector4,ps:5}],sn:"Hermite$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Length",t:8,sn:"Length",rt:$n[1].Single},{a:2,n:"LengthSquared",t:8,sn:"LengthSquared",rt:$n[1].Single},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"Lerp",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"Lerp",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector4,ps:3}],sn:"Lerp$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"LerpPrecise",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"LerpPrecise",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector4,ps:3}],sn:"LerpPrecise$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Max",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Max",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Max$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Min",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Min",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Min$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Multiply",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"Multiply$1",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[1].Single]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Multiply$2",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Multiply",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Multiply$3",rt:$n[1].Void,p:[$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"Negate",rt:$n[0].Vector4,p:[$n[0].Vector4]},{a:2,n:"Negate",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector4,ps:0},{n:"result",out:!0,pt:$n[0].Vector4,ps:1}],sn:"Negate$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[1].Void},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"Normalize",rt:$n[0].Vector4,p:[$n[0].Vector4]},{a:2,n:"Normalize",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector4,ps:0},{n:"result",out:!0,pt:$n[0].Vector4,ps:1}],sn:"Normalize$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2}],sn:"SmoothStep",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single]},{a:2,n:"SmoothStep",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"amount",pt:$n[1].Single,ps:2},{n:"result",out:!0,pt:$n[0].Vector4,ps:3}],sn:"SmoothStep$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[1].Single,$n[0].Vector4]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"Subtract",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"Subtract",is:!0,t:8,pi:[{n:"value1",ref:!0,pt:$n[0].Vector4,ps:0},{n:"value2",ref:!0,pt:$n[0].Vector4,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Subtract$1",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Vector4,$n[0].Vector4]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform",rt:$n[0].Vector4,p:[$n[0].Vector2,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$1",rt:$n[0].Vector4,p:[$n[0].Vector2,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform$2",rt:$n[0].Vector4,p:[$n[0].Vector3,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector3,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$3",rt:$n[0].Vector4,p:[$n[0].Vector3,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0},{n:"matrix",pt:$n[0].Matrix,ps:1}],sn:"Transform$4",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Matrix]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0},{n:"rotation",pt:$n[0].Quaternion,ps:1}],sn:"Transform$5",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Quaternion]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$6",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Matrix,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector2,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$7",rt:$n[1].Void,p:[$n[0].Vector2,$n[0].Quaternion,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$8",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Matrix,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector3,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$9",rt:$n[1].Void,p:[$n[0].Vector3,$n[0].Quaternion,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector4,ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$10",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Matrix,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"value",ref:!0,pt:$n[0].Vector4,ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"result",out:!0,pt:$n[0].Vector4,ps:2}],sn:"Transform$11",rt:$n[1].Void,p:[$n[0].Vector4,$n[0].Quaternion,$n[0].Vector4]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:0},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:2}],sn:"Transform$12",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector4),$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector4)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:0},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:1},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:2}],sn:"Transform$13",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector4),$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector4)]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"matrix",ref:!0,pt:$n[0].Matrix,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$14",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector4),$n[1].Int32,$n[0].Matrix,System.Array.type(Microsoft.Xna.Framework.Vector4),$n[1].Int32,$n[1].Int32]},{a:2,n:"Transform",is:!0,t:8,pi:[{n:"sourceArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:0},{n:"sourceIndex",pt:$n[1].Int32,ps:1},{n:"rotation",ref:!0,pt:$n[0].Quaternion,ps:2},{n:"destinationArray",pt:System.Array.type(Microsoft.Xna.Framework.Vector4),ps:3},{n:"destinationIndex",pt:$n[1].Int32,ps:4},{n:"length",pt:$n[1].Int32,ps:5}],sn:"Transform$15",rt:$n[1].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector4),$n[1].Int32,$n[0].Quaternion,System.Array.type(Microsoft.Xna.Framework.Vector4),$n[1].Int32,$n[1].Int32]},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Addition",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Division",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_Division",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"divider",pt:$n[1].Single,ps:1}],sn:"op_Division$1",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[1].Single]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Multiply",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0},{n:"scaleFactor",pt:$n[1].Single,ps:1}],sn:"op_Multiply$1",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[1].Single]},{a:2,n:"op_Multiply",is:!0,t:8,pi:[{n:"scaleFactor",pt:$n[1].Single,ps:0},{n:"value",pt:$n[0].Vector4,ps:1}],sn:"op_Multiply$2",rt:$n[0].Vector4,p:[$n[1].Single,$n[0].Vector4]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Vector4,ps:0},{n:"value2",pt:$n[0].Vector4,ps:1}],sn:"op_Subtraction",rt:$n[0].Vector4,p:[$n[0].Vector4,$n[0].Vector4]},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"value",pt:$n[0].Vector4,ps:0}],sn:"op_UnaryNegation",rt:$n[0].Vector4,p:[$n[0].Vector4]},{a:4,n:"DebugDisplayString",t:16,rt:$n[1].String,g:{a:4,n:"get_DebugDisplayString",t:8,rt:$n[1].String,fg:"DebugDisplayString"},fn:"DebugDisplayString"},{a:2,n:"One",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_One",t:8,rt:$n[0].Vector4,fg:"One",is:!0},fn:"One"},{a:2,n:"UnitW",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_UnitW",t:8,rt:$n[0].Vector4,fg:"UnitW",is:!0},fn:"UnitW"},{a:2,n:"UnitX",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_UnitX",t:8,rt:$n[0].Vector4,fg:"UnitX",is:!0},fn:"UnitX"},{a:2,n:"UnitY",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_UnitY",t:8,rt:$n[0].Vector4,fg:"UnitY",is:!0},fn:"UnitY"},{a:2,n:"UnitZ",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_UnitZ",t:8,rt:$n[0].Vector4,fg:"UnitZ",is:!0},fn:"UnitZ"},{a:2,n:"Zero",is:!0,t:16,rt:$n[0].Vector4,g:{a:2,n:"get_Zero",t:8,rt:$n[0].Vector4,fg:"Zero",is:!0},fn:"Zero"},{a:2,n:"W",t:4,rt:$n[1].Single,sn:"W"},{a:2,n:"X",t:4,rt:$n[1].Single,sn:"X"},{a:2,n:"Y",t:4,rt:$n[1].Single,sn:"Y"},{a:2,n:"Z",t:4,rt:$n[1].Single,sn:"Z"},{a:1,n:"one",is:!0,t:4,rt:$n[0].Vector4,sn:"one",ro:!0},{a:1,n:"unitW",is:!0,t:4,rt:$n[0].Vector4,sn:"unitW",ro:!0},{a:1,n:"unitX",is:!0,t:4,rt:$n[0].Vector4,sn:"unitX",ro:!0},{a:1,n:"unitY",is:!0,t:4,rt:$n[0].Vector4,sn:"unitY",ro:!0},{a:1,n:"unitZ",is:!0,t:4,rt:$n[0].Vector4,sn:"unitZ",ro:!0},{a:1,n:"zero",is:!0,t:4,rt:$n[0].Vector4,sn:"zero",ro:!0}]}});$m($n[4].GraphicsDevice,function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[0].Game],pi:[{n:"game",pt:$n[0].Game,ps:0}],sn:"ctor"},{a:2,n:"Clear",t:8,pi:[{n:"color",pt:$n[0].Color,ps:0}],sn:"Clear",rt:$n[1].Void,p:[$n[0].Color]},{a:4,n:"Init",t:8,sn:"Init",rt:$n[1].Void},{a:4,n:"context",t:4,rt:$n[5].WebGLRenderingContext,sn:"context"},{a:4,n:"game",t:4,rt:$n[0].Game,sn:"game"},{a:2,n:"graphicsDeviceManagers",t:4,rt:$n[2].List$1(Microsoft.Xna.Framework.GraphicsDeviceManager),sn:"graphicsDeviceManagers"},{a:4,n:"internal",t:4,rt:HTMLCanvasElement,sn:"internal"}]}});$m($n[4].SpriteBatch,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[4].GraphicsDevice],pi:[{n:"graphicsDevice",pt:$n[4].GraphicsDevice,ps:0}],sn:"ctor"},{a:1,n:"AssertState",t:8,pi:[{n:"old",pt:$n[4].SpriteBatch.BeginState,ps:0},{n:"new",pt:$n[4].SpriteBatch.BeginState,ps:1}],sn:"AssertState",rt:$n[1].Void,p:[$n[4].SpriteBatch.BeginState,$n[4].SpriteBatch.BeginState]},{a:2,n:"Begin",t:8,sn:"Begin",rt:$n[1].Void},{a:1,n:"CreateProgram",is:!0,t:8,pi:[{n:"gl",pt:$n[5].WebGLRenderingContext,ps:0},{n:"vertexShader",pt:$n[5].WebGLShader,ps:1},{n:"fragmentShader",pt:$n[5].WebGLShader,ps:2}],sn:"CreateProgram",rt:$n[5].WebGLProgram,p:[$n[5].WebGLRenderingContext,$n[5].WebGLShader,$n[5].WebGLShader]},{a:1,n:"CreateShader",is:!0,t:8,pi:[{n:"gl",pt:$n[5].WebGLRenderingContext,ps:0},{n:"type",pt:$n[1].Int32,ps:1},{n:"source",pt:$n[1].String,ps:2}],sn:"CreateShader",rt:$n[5].WebGLShader,p:[$n[5].WebGLRenderingContext,$n[1].Int32,$n[1].String]},{a:2,n:"Draw",t:8,pi:[{n:"image",pt:$n[4].Texture2D,ps:0},{n:"position",pt:$n[0].Rectangle,ps:1},{n:"color",pt:$n[0].Color,ps:2}],sn:"Draw",rt:$n[1].Void,p:[$n[4].Texture2D,$n[0].Rectangle,$n[0].Color]},{a:2,n:"Draw",t:8,pi:[{n:"image",pt:$n[4].Texture2D,ps:0},{n:"position",pt:$n[0].Vector2,ps:1},{n:"color",pt:$n[0].Color,ps:2}],sn:"Draw$1",rt:$n[1].Void,p:[$n[4].Texture2D,$n[0].Vector2,$n[0].Color]},{a:2,n:"End",t:8,sn:"End",rt:$n[1].Void},{a:1,n:"SetRectangle",is:!0,t:8,pi:[{n:"gl",pt:$n[5].WebGLRenderingContext,ps:0},{n:"x",pt:$n[1].Double,ps:1},{n:"y",pt:$n[1].Double,ps:2},{n:"width",pt:$n[1].Double,ps:3},{n:"height",pt:$n[1].Double,ps:4}],sn:"SetRectangle",rt:$n[1].Void,p:[$n[5].WebGLRenderingContext,$n[1].Double,$n[1].Double,$n[1].Double,$n[1].Double]},{a:4,n:"context",t:16,rt:$n[5].WebGLRenderingContext,g:{a:4,n:"get_context",t:8,rt:$n[5].WebGLRenderingContext,fg:"context"},fn:"context"},{a:1,n:"_beginState",t:4,rt:$n[4].SpriteBatch.BeginState,sn:"_beginState"},{a:1,n:"_fragmentShader",t:4,rt:$n[5].WebGLShader,sn:"_fragmentShader"},{a:1,n:"_vertexShader",t:4,rt:$n[5].WebGLShader,sn:"_vertexShader"},{a:4,n:"fragmentShader",is:!0,t:4,rt:$n[1].String,sn:"fragmentShader"},{a:1,n:"internal",t:4,rt:$n[4].GraphicsDevice,sn:"internal"},{a:1,n:"positionBuffer",t:4,rt:$n[5].WebGLBuffer,sn:"positionBuffer"},{a:1,n:"positionLocation",t:4,rt:$n[1].Int32,sn:"positionLocation"},{a:1,n:"program",t:4,rt:$n[5].WebGLProgram,sn:"program"},{a:1,n:"texCoordBuffer",t:4,rt:$n[5].WebGLBuffer,sn:"texCoordBuffer"},{a:1,n:"texCoordLocation",t:4,rt:$n[1].Int32,sn:"texCoordLocation"},{a:4,n:"vertexShader",is:!0,t:4,rt:$n[1].String,sn:"vertexShader"}]}});$m($n[4].SpriteBatch.BeginState,function(){return{td:$n[4].SpriteBatch,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Begin",is:!0,t:4,rt:$n[4].SpriteBatch.BeginState,sn:"Begin"},{a:2,n:"End",is:!0,t:4,rt:$n[4].SpriteBatch.BeginState,sn:"End"}]}});$m($n[4].SpriteFont,function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"}]}});$m($n[4].Texture2D,function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:4,n:".ctor",t:1,p:[HTMLImageElement],pi:[{n:"internal",pt:HTMLImageElement,ps:0}],sn:"$ctor1"},{a:2,n:"Height",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Height",t:8,rt:$n[1].Int32,fg:"Height"},fn:"Height"},{a:2,n:"Width",t:16,rt:$n[1].Int32,g:{a:2,n:"get_Width",t:8,rt:$n[1].Int32,fg:"Width"},fn:"Width"},{a:4,n:"internal",t:4,rt:HTMLImageElement,sn:"internal"}]}});$m($n[3].ContentManager,function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:4,n:"AwaitLoad",t:8,sn:"AwaitLoad",rt:$n[6].Task},{a:4,n:"AwaitLoad",t:8,pi:[{n:"value",pt:$n[1].String,ps:0}],sn:"AwaitLoad$1",rt:$n[6].Task$1,p:[$n[1].String]},{a:2,n:"Load",t:8,pi:[{n:"value",pt:$n[1].String,ps:0}],tpc:1,tprm:["T"],sn:"Load",rt:System.Object,p:[$n[1].String]},{a:2,n:"RootDirectory",t:16,rt:$n[1].String,g:{a:2,n:"get_RootDirectory",t:8,rt:$n[1].String,fg:"RootDirectory"},s:{a:2,n:"set_RootDirectory",t:8,p:[$n[1].String],rt:$n[1].Void,fs:"RootDirectory"},fn:"RootDirectory"},{a:1,n:"__Property__Initializer__RootDirectory",t:4,rt:$n[1].String,sn:"__Property__Initializer__RootDirectory"},{a:1,n:"images",t:4,rt:$n[2].Dictionary$2(System.String,Microsoft.Xna.Framework.Graphics.Texture2D),sn:"images"},{a:4,n:"internal",t:4,rt:$n[0].Game,sn:"internal"}]}});$m($n[7].Buttons,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"A",is:!0,t:4,rt:$n[7].Buttons,sn:"A"},{a:2,n:"B",is:!0,t:4,rt:$n[7].Buttons,sn:"B"},{a:2,n:"Back",is:!0,t:4,rt:$n[7].Buttons,sn:"Back"},{a:2,n:"BigButton",is:!0,t:4,rt:$n[7].Buttons,sn:"BigButton"},{a:2,n:"DPadDown",is:!0,t:4,rt:$n[7].Buttons,sn:"DPadDown"},{a:2,n:"DPadLeft",is:!0,t:4,rt:$n[7].Buttons,sn:"DPadLeft"},{a:2,n:"DPadRight",is:!0,t:4,rt:$n[7].Buttons,sn:"DPadRight"},{a:2,n:"DPadUp",is:!0,t:4,rt:$n[7].Buttons,sn:"DPadUp"},{a:2,n:"LeftShoulder",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftShoulder"},{a:2,n:"LeftStick",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftStick"},{a:2,n:"LeftThumbstickDown",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftThumbstickDown"},{a:2,n:"LeftThumbstickLeft",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftThumbstickLeft"},{a:2,n:"LeftThumbstickRight",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftThumbstickRight"},{a:2,n:"LeftThumbstickUp",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftThumbstickUp"},{a:2,n:"LeftTrigger",is:!0,t:4,rt:$n[7].Buttons,sn:"LeftTrigger"},{a:2,n:"RightShoulder",is:!0,t:4,rt:$n[7].Buttons,sn:"RightShoulder"},{a:2,n:"RightStick",is:!0,t:4,rt:$n[7].Buttons,sn:"RightStick"},{a:2,n:"RightThumbstickDown",is:!0,t:4,rt:$n[7].Buttons,sn:"RightThumbstickDown"},{a:2,n:"RightThumbstickLeft",is:!0,t:4,rt:$n[7].Buttons,sn:"RightThumbstickLeft"},{a:2,n:"RightThumbstickRight",is:!0,t:4,rt:$n[7].Buttons,sn:"RightThumbstickRight"},{a:2,n:"RightThumbstickUp",is:!0,t:4,rt:$n[7].Buttons,sn:"RightThumbstickUp"},{a:2,n:"RightTrigger",is:!0,t:4,rt:$n[7].Buttons,sn:"RightTrigger"},{a:2,n:"Start",is:!0,t:4,rt:$n[7].Buttons,sn:"Start"},{a:2,n:"X",is:!0,t:4,rt:$n[7].Buttons,sn:"X"},{a:2,n:"Y",is:!0,t:4,rt:$n[7].Buttons,sn:"Y"}]}});$m($n[7].ButtonState,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Pressed",is:!0,t:4,rt:$n[7].ButtonState,sn:"Pressed"},{a:2,n:"Released",is:!0,t:4,rt:$n[7].ButtonState,sn:"Released"}]}});$m($n[7].GamePad,function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetState",is:!0,t:8,pi:[{n:"playerIndex",pt:$n[0].PlayerIndex,ps:0}],sn:"GetState",rt:$n[7].GamePadState,p:[$n[0].PlayerIndex]},{a:2,n:"GetState",is:!0,t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0}],sn:"GetState$2",rt:$n[7].GamePadState,p:[$n[1].Int32]},{a:2,n:"GetState",is:!0,t:8,pi:[{n:"playerIndex",pt:$n[0].PlayerIndex,ps:0},{n:"deadZoneMode",pt:$n[7].GamePadDeadZone,ps:1}],sn:"GetState$1",rt:$n[7].GamePadState,p:[$n[0].PlayerIndex,$n[7].GamePadDeadZone]},{a:2,n:"GetState",is:!0,t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0},{n:"deadZoneMode",pt:$n[7].GamePadDeadZone,ps:1}],sn:"GetState$3",rt:$n[7].GamePadState,p:[$n[1].Int32,$n[7].GamePadDeadZone]},{a:2,n:"SetVibration",is:!0,t:8,pi:[{n:"playerIndex",pt:$n[0].PlayerIndex,ps:0},{n:"leftMotor",pt:$n[1].Single,ps:1},{n:"rightMotor",pt:$n[1].Single,ps:2}],sn:"SetVibration",rt:$n[1].Boolean,p:[$n[0].PlayerIndex,$n[1].Single,$n[1].Single]},{a:2,n:"SetVibration",is:!0,t:8,pi:[{n:"index",pt:$n[1].Int32,ps:0},{n:"leftMotor",pt:$n[1].Single,ps:1},{n:"rightMotor",pt:$n[1].Single,ps:2}],sn:"SetVibration$1",rt:$n[1].Boolean,p:[$n[1].Int32,$n[1].Single,$n[1].Single]},{a:2,n:"MaximumGamePadCount",is:!0,t:16,rt:$n[1].Int32,g:{a:2,n:"get_MaximumGamePadCount",t:8,rt:$n[1].Int32,fg:"MaximumGamePadCount",is:!0},fn:"MaximumGamePadCount"}]}});$m($n[7].GamePadButtons,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[7].Buttons],pi:[{n:"buttons",pt:$n[7].Buttons,ps:0}],sn:"$ctor1"},{a:4,n:".ctor",t:1,p:[System.Array.type(Microsoft.Xna.Framework.Input.Buttons)],pi:[{n:"buttons",ip:!0,pt:System.Array.type(Microsoft.Xna.Framework.Input.Buttons),ps:0}],sn:"$ctor2"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadButtons,ps:0},{n:"right",pt:$n[7].GamePadButtons,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadButtons,$n[7].GamePadButtons]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadButtons,ps:0},{n:"right",pt:$n[7].GamePadButtons,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadButtons,$n[7].GamePadButtons]},{a:2,n:"A",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_A",t:8,rt:$n[7].ButtonState,fg:"A"},fn:"A"},{a:2,n:"B",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_B",t:8,rt:$n[7].ButtonState,fg:"B"},fn:"B"},{a:2,n:"Back",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Back",t:8,rt:$n[7].ButtonState,fg:"Back"},fn:"Back"},{a:2,n:"BigButton",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_BigButton",t:8,rt:$n[7].ButtonState,fg:"BigButton"},fn:"BigButton"},{a:2,n:"LeftShoulder",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_LeftShoulder",t:8,rt:$n[7].ButtonState,fg:"LeftShoulder"},fn:"LeftShoulder"},{a:2,n:"LeftStick",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_LeftStick",t:8,rt:$n[7].ButtonState,fg:"LeftStick"},fn:"LeftStick"},{a:2,n:"RightShoulder",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_RightShoulder",t:8,rt:$n[7].ButtonState,fg:"RightShoulder"},fn:"RightShoulder"},{a:2,n:"RightStick",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_RightStick",t:8,rt:$n[7].ButtonState,fg:"RightStick"},fn:"RightStick"},{a:2,n:"Start",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Start",t:8,rt:$n[7].ButtonState,fg:"Start"},fn:"Start"},{a:2,n:"X",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_X",t:8,rt:$n[7].ButtonState,fg:"X"},fn:"X"},{a:2,n:"Y",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Y",t:8,rt:$n[7].ButtonState,fg:"Y"},fn:"Y"},{a:4,n:"_buttons",t:4,rt:$n[7].Buttons,sn:"_buttons",ro:!0}]}});$m($n[7].GamePadCapabilities,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadCapabilities,ps:0},{n:"right",pt:$n[7].GamePadCapabilities,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadCapabilities,$n[7].GamePadCapabilities]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadCapabilities,ps:0},{n:"right",pt:$n[7].GamePadCapabilities,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadCapabilities,$n[7].GamePadCapabilities]},{a:2,n:"DisplayName",t:16,rt:$n[1].String,g:{a:2,n:"get_DisplayName",t:8,rt:$n[1].String,fg:"DisplayName"},s:{a:4,n:"set_DisplayName",t:8,p:[$n[1].String],rt:$n[1].Void,fs:"DisplayName"},fn:"DisplayName"},{a:2,n:"GamePadType",t:16,rt:$n[7].GamePadType,g:{a:2,n:"get_GamePadType",t:8,rt:$n[7].GamePadType,fg:"GamePadType"},s:{a:4,n:"set_GamePadType",t:8,p:[$n[7].GamePadType],rt:$n[1].Void,fs:"GamePadType"},fn:"GamePadType"},{a:2,n:"HasAButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasAButton",t:8,rt:$n[1].Boolean,fg:"HasAButton"},s:{a:4,n:"set_HasAButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasAButton"},fn:"HasAButton"},{a:2,n:"HasBButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasBButton",t:8,rt:$n[1].Boolean,fg:"HasBButton"},s:{a:4,n:"set_HasBButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasBButton"},fn:"HasBButton"},{a:2,n:"HasBackButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasBackButton",t:8,rt:$n[1].Boolean,fg:"HasBackButton"},s:{a:4,n:"set_HasBackButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasBackButton"},fn:"HasBackButton"},{a:2,n:"HasBigButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasBigButton",t:8,rt:$n[1].Boolean,fg:"HasBigButton"},s:{a:4,n:"set_HasBigButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasBigButton"},fn:"HasBigButton"},{a:2,n:"HasDPadDownButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasDPadDownButton",t:8,rt:$n[1].Boolean,fg:"HasDPadDownButton"},s:{a:4,n:"set_HasDPadDownButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasDPadDownButton"},fn:"HasDPadDownButton"},{a:2,n:"HasDPadLeftButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasDPadLeftButton",t:8,rt:$n[1].Boolean,fg:"HasDPadLeftButton"},s:{a:4,n:"set_HasDPadLeftButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasDPadLeftButton"},fn:"HasDPadLeftButton"},{a:2,n:"HasDPadRightButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasDPadRightButton",t:8,rt:$n[1].Boolean,fg:"HasDPadRightButton"},s:{a:4,n:"set_HasDPadRightButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasDPadRightButton"},fn:"HasDPadRightButton"},{a:2,n:"HasDPadUpButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasDPadUpButton",t:8,rt:$n[1].Boolean,fg:"HasDPadUpButton"},s:{a:4,n:"set_HasDPadUpButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasDPadUpButton"},fn:"HasDPadUpButton"},{a:2,n:"HasLeftShoulderButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftShoulderButton",t:8,rt:$n[1].Boolean,fg:"HasLeftShoulderButton"},s:{a:4,n:"set_HasLeftShoulderButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftShoulderButton"},fn:"HasLeftShoulderButton"},{a:2,n:"HasLeftStickButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftStickButton",t:8,rt:$n[1].Boolean,fg:"HasLeftStickButton"},s:{a:4,n:"set_HasLeftStickButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftStickButton"},fn:"HasLeftStickButton"},{a:2,n:"HasLeftTrigger",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftTrigger",t:8,rt:$n[1].Boolean,fg:"HasLeftTrigger"},s:{a:4,n:"set_HasLeftTrigger",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftTrigger"},fn:"HasLeftTrigger"},{a:2,n:"HasLeftVibrationMotor",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftVibrationMotor",t:8,rt:$n[1].Boolean,fg:"HasLeftVibrationMotor"},s:{a:4,n:"set_HasLeftVibrationMotor",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftVibrationMotor"},fn:"HasLeftVibrationMotor"},{a:2,n:"HasLeftXThumbStick",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftXThumbStick",t:8,rt:$n[1].Boolean,fg:"HasLeftXThumbStick"},s:{a:4,n:"set_HasLeftXThumbStick",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftXThumbStick"},fn:"HasLeftXThumbStick"},{a:2,n:"HasLeftYThumbStick",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasLeftYThumbStick",t:8,rt:$n[1].Boolean,fg:"HasLeftYThumbStick"},s:{a:4,n:"set_HasLeftYThumbStick",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasLeftYThumbStick"},fn:"HasLeftYThumbStick"},{a:2,n:"HasRightShoulderButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightShoulderButton",t:8,rt:$n[1].Boolean,fg:"HasRightShoulderButton"},s:{a:4,n:"set_HasRightShoulderButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightShoulderButton"},fn:"HasRightShoulderButton"},{a:2,n:"HasRightStickButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightStickButton",t:8,rt:$n[1].Boolean,fg:"HasRightStickButton"},s:{a:4,n:"set_HasRightStickButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightStickButton"},fn:"HasRightStickButton"},{a:2,n:"HasRightTrigger",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightTrigger",t:8,rt:$n[1].Boolean,fg:"HasRightTrigger"},s:{a:4,n:"set_HasRightTrigger",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightTrigger"},fn:"HasRightTrigger"},{a:2,n:"HasRightVibrationMotor",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightVibrationMotor",t:8,rt:$n[1].Boolean,fg:"HasRightVibrationMotor"},s:{a:4,n:"set_HasRightVibrationMotor",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightVibrationMotor"},fn:"HasRightVibrationMotor"},{a:2,n:"HasRightXThumbStick",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightXThumbStick",t:8,rt:$n[1].Boolean,fg:"HasRightXThumbStick"},s:{a:4,n:"set_HasRightXThumbStick",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightXThumbStick"},fn:"HasRightXThumbStick"},{a:2,n:"HasRightYThumbStick",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasRightYThumbStick",t:8,rt:$n[1].Boolean,fg:"HasRightYThumbStick"},s:{a:4,n:"set_HasRightYThumbStick",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasRightYThumbStick"},fn:"HasRightYThumbStick"},{a:2,n:"HasStartButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasStartButton",t:8,rt:$n[1].Boolean,fg:"HasStartButton"},s:{a:4,n:"set_HasStartButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasStartButton"},fn:"HasStartButton"},{a:2,n:"HasVoiceSupport",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasVoiceSupport",t:8,rt:$n[1].Boolean,fg:"HasVoiceSupport"},s:{a:4,n:"set_HasVoiceSupport",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasVoiceSupport"},fn:"HasVoiceSupport"},{a:2,n:"HasXButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasXButton",t:8,rt:$n[1].Boolean,fg:"HasXButton"},s:{a:4,n:"set_HasXButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasXButton"},fn:"HasXButton"},{a:2,n:"HasYButton",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_HasYButton",t:8,rt:$n[1].Boolean,fg:"HasYButton"},s:{a:4,n:"set_HasYButton",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"HasYButton"},fn:"HasYButton"},{a:2,n:"Identifier",t:16,rt:$n[1].String,g:{a:2,n:"get_Identifier",t:8,rt:$n[1].String,fg:"Identifier"},s:{a:4,n:"set_Identifier",t:8,p:[$n[1].String],rt:$n[1].Void,fs:"Identifier"},fn:"Identifier"},{a:2,n:"IsConnected",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsConnected",t:8,rt:$n[1].Boolean,fg:"IsConnected"},s:{a:4,n:"set_IsConnected",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"IsConnected"},fn:"IsConnected"}]}});$m($n[7].GamePadDeadZone,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Circular",is:!0,t:4,rt:$n[7].GamePadDeadZone,sn:"Circular"},{a:2,n:"IndependentAxes",is:!0,t:4,rt:$n[7].GamePadDeadZone,sn:"IndependentAxes"},{a:2,n:"None",is:!0,t:4,rt:$n[7].GamePadDeadZone,sn:"None"}]}});$m($n[7].GamePadDPad,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:".ctor",t:1,p:[$n[7].Buttons],pi:[{n:"buttons",pt:$n[7].Buttons,ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[7].ButtonState,$n[7].ButtonState,$n[7].ButtonState,$n[7].ButtonState],pi:[{n:"upValue",pt:$n[7].ButtonState,ps:0},{n:"downValue",pt:$n[7].ButtonState,ps:1},{n:"leftValue",pt:$n[7].ButtonState,ps:2},{n:"rightValue",pt:$n[7].ButtonState,ps:3}],sn:"$ctor2"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadDPad,ps:0},{n:"right",pt:$n[7].GamePadDPad,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadDPad,$n[7].GamePadDPad]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadDPad,ps:0},{n:"right",pt:$n[7].GamePadDPad,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadDPad,$n[7].GamePadDPad]},{a:2,n:"Down",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Down",t:8,rt:$n[7].ButtonState,fg:"Down"},s:{a:1,n:"set_Down",t:8,p:[$n[7].ButtonState],rt:$n[1].Void,fs:"Down"},fn:"Down"},{a:2,n:"Left",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Left",t:8,rt:$n[7].ButtonState,fg:"Left"},s:{a:1,n:"set_Left",t:8,p:[$n[7].ButtonState],rt:$n[1].Void,fs:"Left"},fn:"Left"},{a:2,n:"Right",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Right",t:8,rt:$n[7].ButtonState,fg:"Right"},s:{a:1,n:"set_Right",t:8,p:[$n[7].ButtonState],rt:$n[1].Void,fs:"Right"},fn:"Right"},{a:2,n:"Up",t:16,rt:$n[7].ButtonState,g:{a:2,n:"get_Up",t:8,rt:$n[7].ButtonState,fg:"Up"},s:{a:1,n:"set_Up",t:8,p:[$n[7].ButtonState],rt:$n[1].Void,fs:"Up"},fn:"Up"}]}});$m($n[7].GamePadState,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[7].GamePadThumbSticks,$n[7].GamePadTriggers,$n[7].GamePadButtons,$n[7].GamePadDPad],pi:[{n:"thumbSticks",pt:$n[7].GamePadThumbSticks,ps:0},{n:"triggers",pt:$n[7].GamePadTriggers,ps:1},{n:"buttons",pt:$n[7].GamePadButtons,ps:2},{n:"dPad",pt:$n[7].GamePadDPad,ps:3}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[0].Vector2,$n[0].Vector2,$n[1].Single,$n[1].Single,$n[7].Buttons],pi:[{n:"leftThumbStick",pt:$n[0].Vector2,ps:0},{n:"rightThumbStick",pt:$n[0].Vector2,ps:1},{n:"leftTrigger",pt:$n[1].Single,ps:2},{n:"rightTrigger",pt:$n[1].Single,ps:3},{n:"buttons",pt:$n[7].Buttons,ps:4}],sn:"$ctor2"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:1,n:"GetVirtualButtons",t:8,sn:"GetVirtualButtons",rt:$n[7].Buttons},{a:2,n:"IsButtonDown",t:8,pi:[{n:"button",pt:$n[7].Buttons,ps:0}],sn:"IsButtonDown",rt:$n[1].Boolean,p:[$n[7].Buttons]},{a:2,n:"IsButtonUp",t:8,pi:[{n:"button",pt:$n[7].Buttons,ps:0}],sn:"IsButtonUp",rt:$n[1].Boolean,p:[$n[7].Buttons]},{a:1,n:"PlatformConstruct",t:8,sn:"PlatformConstruct",rt:$n[1].Void},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadState,ps:0},{n:"right",pt:$n[7].GamePadState,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadState,$n[7].GamePadState]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadState,ps:0},{n:"right",pt:$n[7].GamePadState,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadState,$n[7].GamePadState]},{a:2,n:"Buttons",t:16,rt:$n[7].GamePadButtons,g:{a:2,n:"get_Buttons",t:8,rt:$n[7].GamePadButtons,fg:"Buttons"},s:{a:4,n:"set_Buttons",t:8,p:[$n[7].GamePadButtons],rt:$n[1].Void,fs:"Buttons"},fn:"Buttons"},{a:2,n:"DPad",t:16,rt:$n[7].GamePadDPad,g:{a:2,n:"get_DPad",t:8,rt:$n[7].GamePadDPad,fg:"DPad"},s:{a:4,n:"set_DPad",t:8,p:[$n[7].GamePadDPad],rt:$n[1].Void,fs:"DPad"},fn:"DPad"},{a:2,n:"IsConnected",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_IsConnected",t:8,rt:$n[1].Boolean,fg:"IsConnected"},s:{a:4,n:"set_IsConnected",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"IsConnected"},fn:"IsConnected"},{a:2,n:"PacketNumber",t:16,rt:$n[1].Int32,g:{a:2,n:"get_PacketNumber",t:8,rt:$n[1].Int32,fg:"PacketNumber"},s:{a:4,n:"set_PacketNumber",t:8,p:[$n[1].Int32],rt:$n[1].Void,fs:"PacketNumber"},fn:"PacketNumber"},{a:2,n:"ThumbSticks",t:16,rt:$n[7].GamePadThumbSticks,g:{a:2,n:"get_ThumbSticks",t:8,rt:$n[7].GamePadThumbSticks,fg:"ThumbSticks"},s:{a:4,n:"set_ThumbSticks",t:8,p:[$n[7].GamePadThumbSticks],rt:$n[1].Void,fs:"ThumbSticks"},fn:"ThumbSticks"},{a:2,n:"Triggers",t:16,rt:$n[7].GamePadTriggers,g:{a:2,n:"get_Triggers",t:8,rt:$n[7].GamePadTriggers,fg:"Triggers"},s:{a:4,n:"set_Triggers",t:8,p:[$n[7].GamePadTriggers],rt:$n[1].Void,fs:"Triggers"},fn:"Triggers"},{a:2,n:"Default",is:!0,t:4,rt:$n[7].GamePadState,sn:"Default",ro:!0}]}});$m($n[7].GamePadThumbSticks,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Vector2,$n[0].Vector2],pi:[{n:"leftPosition",pt:$n[0].Vector2,ps:0},{n:"rightPosition",pt:$n[0].Vector2,ps:1}],sn:"$ctor1"},{a:4,n:".ctor",t:1,p:[$n[0].Vector2,$n[0].Vector2,$n[7].GamePadDeadZone],pi:[{n:"leftPosition",pt:$n[0].Vector2,ps:0},{n:"rightPosition",pt:$n[0].Vector2,ps:1},{n:"deadZoneMode",pt:$n[7].GamePadDeadZone,ps:2}],sn:"$ctor2"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{a:1,n:"ExcludeAxisDeadZone",t:8,pi:[{n:"value",pt:$n[1].Single,ps:0},{n:"deadZone",pt:$n[1].Single,ps:1}],sn:"ExcludeAxisDeadZone",rt:$n[1].Single,p:[$n[1].Single,$n[1].Single]},{a:1,n:"ExcludeCircularDeadZone",t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"deadZone",pt:$n[1].Single,ps:1}],sn:"ExcludeCircularDeadZone",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{a:1,n:"ExcludeIndependentAxesDeadZone",t:8,pi:[{n:"value",pt:$n[0].Vector2,ps:0},{n:"deadZone",pt:$n[1].Single,ps:1}],sn:"ExcludeIndependentAxesDeadZone",rt:$n[0].Vector2,p:[$n[0].Vector2,$n[1].Single]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadThumbSticks,ps:0},{n:"right",pt:$n[7].GamePadThumbSticks,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadThumbSticks,$n[7].GamePadThumbSticks]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadThumbSticks,ps:0},{n:"right",pt:$n[7].GamePadThumbSticks,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadThumbSticks,$n[7].GamePadThumbSticks]},{a:2,n:"Left",t:16,rt:$n[0].Vector2,g:{a:2,n:"get_Left",t:8,rt:$n[0].Vector2,fg:"Left"},fn:"Left"},{a:2,n:"Right",t:16,rt:$n[0].Vector2,g:{a:2,n:"get_Right",t:8,rt:$n[0].Vector2,fg:"Right"},fn:"Right"},{a:1,n:"_left",t:4,rt:$n[0].Vector2,sn:"_left",ro:!0},{a:1,n:"_right",t:4,rt:$n[0].Vector2,sn:"_right",ro:!0},{a:4,n:"_virtualButtons",t:4,rt:$n[7].Buttons,sn:"_virtualButtons",ro:!0},{a:1,n:"leftThumbDeadZone",is:!0,t:4,rt:$n[1].Single,sn:"leftThumbDeadZone"},{a:1,n:"rightThumbDeadZone",is:!0,t:4,rt:$n[1].Single,sn:"rightThumbDeadZone"}]}});$m($n[7].GamePadTriggers,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Single,$n[1].Single],pi:[{n:"leftTrigger",pt:$n[1].Single,ps:0},{n:"rightTrigger",pt:$n[1].Single,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[1].String},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadTriggers,ps:0},{n:"right",pt:$n[7].GamePadTriggers,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].GamePadTriggers,$n[7].GamePadTriggers]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].GamePadTriggers,ps:0},{n:"right",pt:$n[7].GamePadTriggers,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].GamePadTriggers,$n[7].GamePadTriggers]},{a:2,n:"Left",t:16,rt:$n[1].Single,g:{a:2,n:"get_Left",t:8,rt:$n[1].Single,fg:"Left"},s:{a:1,n:"set_Left",t:8,p:[$n[1].Single],rt:$n[1].Void,fs:"Left"},fn:"Left"},{a:2,n:"Right",t:16,rt:$n[1].Single,g:{a:2,n:"get_Right",t:8,rt:$n[1].Single,fg:"Right"},s:{a:1,n:"set_Right",t:8,p:[$n[1].Single],rt:$n[1].Void,fs:"Right"},fn:"Right"}]}});$m($n[7].GamePadType,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AlternateGuitar",is:!0,t:4,rt:$n[7].GamePadType,sn:"AlternateGuitar"},{a:2,n:"ArcadeStick",is:!0,t:4,rt:$n[7].GamePadType,sn:"ArcadeStick"},{a:2,n:"BigButtonPad",is:!0,t:4,rt:$n[7].GamePadType,sn:"BigButtonPad"},{a:2,n:"DancePad",is:!0,t:4,rt:$n[7].GamePadType,sn:"DancePad"},{a:2,n:"DrumKit",is:!0,t:4,rt:$n[7].GamePadType,sn:"DrumKit"},{a:2,n:"FlightStick",is:!0,t:4,rt:$n[7].GamePadType,sn:"FlightStick"},{a:2,n:"GamePad",is:!0,t:4,rt:$n[7].GamePadType,sn:"GamePad"},{a:2,n:"Guitar",is:!0,t:4,rt:$n[7].GamePadType,sn:"Guitar"},{a:2,n:"Unknown",is:!0,t:4,rt:$n[7].GamePadType,sn:"Unknown"},{a:2,n:"Wheel",is:!0,t:4,rt:$n[7].GamePadType,sn:"Wheel"}]}});$m($n[7].Keyboard,function(){return{att:385,a:2,s:!0,m:[{n:".cctor",t:1,sn:"ctor",sm:!0},{a:2,n:"GetState",is:!0,t:8,sn:"GetState",rt:$n[7].KeyboardState},{a:1,n:"keys",is:!0,t:4,rt:$n[2].HashSet$1(System.Int32),sn:"keys"}]}});$m($n[7].KeyboardState,function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[System.Array.type(Microsoft.Xna.Framework.Input.Keys)],pi:[{n:"keys",ip:!0,pt:System.Array.type(Microsoft.Xna.Framework.Input.Keys),ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[System.Array.type(Microsoft.Xna.Framework.Input.Keys),$n[1].Boolean,$n[1].Boolean],pi:[{n:"keys",pt:System.Array.type(Microsoft.Xna.Framework.Input.Keys),ps:0},{n:"capsLock",dv:!1,o:!0,pt:$n[1].Boolean,ps:1},{n:"numLock",dv:!1,o:!0,pt:$n[1].Boolean,ps:2}],sn:"$ctor2"},{a:4,n:".ctor",t:1,p:[$n[2].List$1(Microsoft.Xna.Framework.Input.Keys),$n[1].Boolean,$n[1].Boolean],pi:[{n:"keys",pt:$n[2].List$1(Microsoft.Xna.Framework.Input.Keys),ps:0},{n:"capsLock",dv:!1,o:!0,pt:$n[1].Boolean,ps:1},{n:"numLock",dv:!1,o:!0,pt:$n[1].Boolean,ps:2}],sn:"$ctor3"},{a:1,n:"AddKeysToArray",is:!0,t:8,pi:[{n:"keys",pt:$n[1].UInt32,ps:0},{n:"offset",pt:$n[1].Int32,ps:1},{n:"pressedKeys",pt:System.Array.type(Microsoft.Xna.Framework.Input.Keys),ps:2},{n:"index",pt:$n[1].Int32,ps:3}],sn:"AddKeysToArray",rt:$n[1].Int32,p:[$n[1].UInt32,$n[1].Int32,System.Array.type(Microsoft.Xna.Framework.Input.Keys),$n[1].Int32]},{a:1,n:"CountBits",is:!0,t:8,pi:[{n:"v",pt:$n[1].UInt32,ps:0}],sn:"CountBits",rt:$n[1].UInt32,p:[$n[1].UInt32]},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[1].Object,ps:0}],sn:"equals",rt:$n[1].Boolean,p:[$n[1].Object]},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[1].Int32},{a:2,n:"GetPressedKeys",t:8,sn:"GetPressedKeys",rt:System.Array.type(Microsoft.Xna.Framework.Input.Keys)},{a:4,n:"InternalClearAllKeys",t:8,sn:"InternalClearAllKeys",rt:$n[1].Void},{a:4,n:"InternalClearKey",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"InternalClearKey",rt:$n[1].Void,p:[$n[7].Keys]},{a:1,n:"InternalGetKey",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"InternalGetKey",rt:$n[1].Boolean,p:[$n[7].Keys]},{a:4,n:"InternalSetKey",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"InternalSetKey",rt:$n[1].Void,p:[$n[7].Keys]},{a:2,n:"IsKeyDown",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"IsKeyDown",rt:$n[1].Boolean,p:[$n[7].Keys]},{a:2,n:"IsKeyUp",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"IsKeyUp",rt:$n[1].Boolean,p:[$n[7].Keys]},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"a",pt:$n[7].KeyboardState,ps:0},{n:"b",pt:$n[7].KeyboardState,ps:1}],sn:"op_Equality",rt:$n[1].Boolean,p:[$n[7].KeyboardState,$n[7].KeyboardState]},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"a",pt:$n[7].KeyboardState,ps:0},{n:"b",pt:$n[7].KeyboardState,ps:1}],sn:"op_Inequality",rt:$n[1].Boolean,p:[$n[7].KeyboardState,$n[7].KeyboardState]},{a:2,n:"CapsLock",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_CapsLock",t:8,rt:$n[1].Boolean,fg:"CapsLock"},s:{a:1,n:"set_CapsLock",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"CapsLock"},fn:"CapsLock"},{a:2,n:"Item",t:16,rt:$n[7].KeyState,p:[$n[7].Keys],i:!0,ipi:[{n:"key",pt:$n[7].Keys,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"key",pt:$n[7].Keys,ps:0}],sn:"getItem",rt:$n[7].KeyState,p:[$n[7].Keys]}},{a:2,n:"NumLock",t:16,rt:$n[1].Boolean,g:{a:2,n:"get_NumLock",t:8,rt:$n[1].Boolean,fg:"NumLock"},s:{a:1,n:"set_NumLock",t:8,p:[$n[1].Boolean],rt:$n[1].Void,fs:"NumLock"},fn:"NumLock"},{a:1,n:"empty",is:!0,t:4,rt:System.Array.type(Microsoft.Xna.Framework.Input.Keys),sn:"empty"},{a:1,n:"keys0",t:4,rt:$n[1].UInt32,sn:"keys0"},{a:1,n:"keys1",t:4,rt:$n[1].UInt32,sn:"keys1"},{a:1,n:"keys2",t:4,rt:$n[1].UInt32,sn:"keys2"},{a:1,n:"keys3",t:4,rt:$n[1].UInt32,sn:"keys3"},{a:1,n:"keys4",t:4,rt:$n[1].UInt32,sn:"keys4"},{a:1,n:"keys5",t:4,rt:$n[1].UInt32,sn:"keys5"},{a:1,n:"keys6",t:4,rt:$n[1].UInt32,sn:"keys6"},{a:1,n:"keys7",t:4,rt:$n[1].UInt32,sn:"keys7"}]}});$m($n[7].Keys,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"A",is:!0,t:4,rt:$n[7].Keys,sn:"A"},{a:2,n:"Add",is:!0,t:4,rt:$n[7].Keys,sn:"Add"},{a:2,n:"Apps",is:!0,t:4,rt:$n[7].Keys,sn:"Apps"},{a:2,n:"Attn",is:!0,t:4,rt:$n[7].Keys,sn:"Attn"},{a:2,n:"B",is:!0,t:4,rt:$n[7].Keys,sn:"B"},{a:2,n:"Back",is:!0,t:4,rt:$n[7].Keys,sn:"Back"},{a:2,n:"BrowserBack",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserBack"},{a:2,n:"BrowserFavorites",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserFavorites"},{a:2,n:"BrowserForward",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserForward"},{a:2,n:"BrowserHome",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserHome"},{a:2,n:"BrowserRefresh",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserRefresh"},{a:2,n:"BrowserSearch",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserSearch"},{a:2,n:"BrowserStop",is:!0,t:4,rt:$n[7].Keys,sn:"BrowserStop"},{a:2,n:"C",is:!0,t:4,rt:$n[7].Keys,sn:"C"},{a:2,n:"CapsLock",is:!0,t:4,rt:$n[7].Keys,sn:"CapsLock"},{a:2,n:"ChatPadGreen",is:!0,t:4,rt:$n[7].Keys,sn:"ChatPadGreen"},{a:2,n:"ChatPadOrange",is:!0,t:4,rt:$n[7].Keys,sn:"ChatPadOrange"},{a:2,n:"Crsel",is:!0,t:4,rt:$n[7].Keys,sn:"Crsel"},{a:2,n:"D",is:!0,t:4,rt:$n[7].Keys,sn:"D"},{a:2,n:"D0",is:!0,t:4,rt:$n[7].Keys,sn:"D0"},{a:2,n:"D1",is:!0,t:4,rt:$n[7].Keys,sn:"D1"},{a:2,n:"D2",is:!0,t:4,rt:$n[7].Keys,sn:"D2"},{a:2,n:"D3",is:!0,t:4,rt:$n[7].Keys,sn:"D3"},{a:2,n:"D4",is:!0,t:4,rt:$n[7].Keys,sn:"D4"},{a:2,n:"D5",is:!0,t:4,rt:$n[7].Keys,sn:"D5"},{a:2,n:"D6",is:!0,t:4,rt:$n[7].Keys,sn:"D6"},{a:2,n:"D7",is:!0,t:4,rt:$n[7].Keys,sn:"D7"},{a:2,n:"D8",is:!0,t:4,rt:$n[7].Keys,sn:"D8"},{a:2,n:"D9",is:!0,t:4,rt:$n[7].Keys,sn:"D9"},{a:2,n:"Decimal",is:!0,t:4,rt:$n[7].Keys,sn:"Decimal"},{a:2,n:"Delete",is:!0,t:4,rt:$n[7].Keys,sn:"Delete"},{a:2,n:"Divide",is:!0,t:4,rt:$n[7].Keys,sn:"Divide"},{a:2,n:"Down",is:!0,t:4,rt:$n[7].Keys,sn:"Down"},{a:2,n:"E",is:!0,t:4,rt:$n[7].Keys,sn:"E"},{a:2,n:"End",is:!0,t:4,rt:$n[7].Keys,sn:"End"},{a:2,n:"Enter",is:!0,t:4,rt:$n[7].Keys,sn:"Enter"},{a:2,n:"EraseEof",is:!0,t:4,rt:$n[7].Keys,sn:"EraseEof"},{a:2,n:"Escape",is:!0,t:4,rt:$n[7].Keys,sn:"Escape"},{a:2,n:"Execute",is:!0,t:4,rt:$n[7].Keys,sn:"Execute"},{a:2,n:"Exsel",is:!0,t:4,rt:$n[7].Keys,sn:"Exsel"},{a:2,n:"F",is:!0,t:4,rt:$n[7].Keys,sn:"F"},{a:2,n:"F1",is:!0,t:4,rt:$n[7].Keys,sn:"F1"},{a:2,n:"F10",is:!0,t:4,rt:$n[7].Keys,sn:"F10"},{a:2,n:"F11",is:!0,t:4,rt:$n[7].Keys,sn:"F11"},{a:2,n:"F12",is:!0,t:4,rt:$n[7].Keys,sn:"F12"},{a:2,n:"F13",is:!0,t:4,rt:$n[7].Keys,sn:"F13"},{a:2,n:"F14",is:!0,t:4,rt:$n[7].Keys,sn:"F14"},{a:2,n:"F15",is:!0,t:4,rt:$n[7].Keys,sn:"F15"},{a:2,n:"F16",is:!0,t:4,rt:$n[7].Keys,sn:"F16"},{a:2,n:"F17",is:!0,t:4,rt:$n[7].Keys,sn:"F17"},{a:2,n:"F18",is:!0,t:4,rt:$n[7].Keys,sn:"F18"},{a:2,n:"F19",is:!0,t:4,rt:$n[7].Keys,sn:"F19"},{a:2,n:"F2",is:!0,t:4,rt:$n[7].Keys,sn:"F2"},{a:2,n:"F20",is:!0,t:4,rt:$n[7].Keys,sn:"F20"},{a:2,n:"F21",is:!0,t:4,rt:$n[7].Keys,sn:"F21"},{a:2,n:"F22",is:!0,t:4,rt:$n[7].Keys,sn:"F22"},{a:2,n:"F23",is:!0,t:4,rt:$n[7].Keys,sn:"F23"},{a:2,n:"F24",is:!0,t:4,rt:$n[7].Keys,sn:"F24"},{a:2,n:"F3",is:!0,t:4,rt:$n[7].Keys,sn:"F3"},{a:2,n:"F4",is:!0,t:4,rt:$n[7].Keys,sn:"F4"},{a:2,n:"F5",is:!0,t:4,rt:$n[7].Keys,sn:"F5"},{a:2,n:"F6",is:!0,t:4,rt:$n[7].Keys,sn:"F6"},{a:2,n:"F7",is:!0,t:4,rt:$n[7].Keys,sn:"F7"},{a:2,n:"F8",is:!0,t:4,rt:$n[7].Keys,sn:"F8"},{a:2,n:"F9",is:!0,t:4,rt:$n[7].Keys,sn:"F9"},{a:2,n:"G",is:!0,t:4,rt:$n[7].Keys,sn:"G"},{a:2,n:"H",is:!0,t:4,rt:$n[7].Keys,sn:"H"},{a:2,n:"Help",is:!0,t:4,rt:$n[7].Keys,sn:"Help"},{a:2,n:"Home",is:!0,t:4,rt:$n[7].Keys,sn:"Home"},{a:2,n:"I",is:!0,t:4,rt:$n[7].Keys,sn:"I"},{a:2,n:"ImeConvert",is:!0,t:4,rt:$n[7].Keys,sn:"ImeConvert"},{a:2,n:"ImeNoConvert",is:!0,t:4,rt:$n[7].Keys,sn:"ImeNoConvert"},{a:2,n:"Insert",is:!0,t:4,rt:$n[7].Keys,sn:"Insert"},{a:2,n:"J",is:!0,t:4,rt:$n[7].Keys,sn:"J"},{a:2,n:"K",is:!0,t:4,rt:$n[7].Keys,sn:"K"},{a:2,n:"Kana",is:!0,t:4,rt:$n[7].Keys,sn:"Kana"},{a:2,n:"Kanji",is:!0,t:4,rt:$n[7].Keys,sn:"Kanji"},{a:2,n:"L",is:!0,t:4,rt:$n[7].Keys,sn:"L"},{a:2,n:"LaunchApplication1",is:!0,t:4,rt:$n[7].Keys,sn:"LaunchApplication1"},{a:2,n:"LaunchApplication2",is:!0,t:4,rt:$n[7].Keys,sn:"LaunchApplication2"},{a:2,n:"LaunchMail",is:!0,t:4,rt:$n[7].Keys,sn:"LaunchMail"},{a:2,n:"Left",is:!0,t:4,rt:$n[7].Keys,sn:"Left"},{a:2,n:"LeftAlt",is:!0,t:4,rt:$n[7].Keys,sn:"LeftAlt"},{a:2,n:"LeftControl",is:!0,t:4,rt:$n[7].Keys,sn:"LeftControl"},{a:2,n:"LeftShift",is:!0,t:4,rt:$n[7].Keys,sn:"LeftShift"},{a:2,n:"LeftWindows",is:!0,t:4,rt:$n[7].Keys,sn:"LeftWindows"},{a:2,n:"M",is:!0,t:4,rt:$n[7].Keys,sn:"M"},{a:2,n:"MediaNextTrack",is:!0,t:4,rt:$n[7].Keys,sn:"MediaNextTrack"},{a:2,n:"MediaPlayPause",is:!0,t:4,rt:$n[7].Keys,sn:"MediaPlayPause"},{a:2,n:"MediaPreviousTrack",is:!0,t:4,rt:$n[7].Keys,sn:"MediaPreviousTrack"},{a:2,n:"MediaStop",is:!0,t:4,rt:$n[7].Keys,sn:"MediaStop"},{a:2,n:"Multiply",is:!0,t:4,rt:$n[7].Keys,sn:"Multiply"},{a:2,n:"N",is:!0,t:4,rt:$n[7].Keys,sn:"N"},{a:2,n:"None",is:!0,t:4,rt:$n[7].Keys,sn:"None"},{a:2,n:"NumLock",is:!0,t:4,rt:$n[7].Keys,sn:"NumLock"},{a:2,n:"NumPad0",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad0"},{a:2,n:"NumPad1",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad1"},{a:2,n:"NumPad2",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad2"},{a:2,n:"NumPad3",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad3"},{a:2,n:"NumPad4",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad4"},{a:2,n:"NumPad5",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad5"},{a:2,n:"NumPad6",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad6"},{a:2,n:"NumPad7",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad7"},{a:2,n:"NumPad8",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad8"},{a:2,n:"NumPad9",is:!0,t:4,rt:$n[7].Keys,sn:"NumPad9"},{a:2,n:"O",is:!0,t:4,rt:$n[7].Keys,sn:"O"},{a:2,n:"Oem8",is:!0,t:4,rt:$n[7].Keys,sn:"Oem8"},{a:2,n:"OemAuto",is:!0,t:4,rt:$n[7].Keys,sn:"OemAuto"},{a:2,n:"OemBackslash",is:!0,t:4,rt:$n[7].Keys,sn:"OemBackslash"},{a:2,n:"OemClear",is:!0,t:4,rt:$n[7].Keys,sn:"OemClear"},{a:2,n:"OemCloseBrackets",is:!0,t:4,rt:$n[7].Keys,sn:"OemCloseBrackets"},{a:2,n:"OemComma",is:!0,t:4,rt:$n[7].Keys,sn:"OemComma"},{a:2,n:"OemCopy",is:!0,t:4,rt:$n[7].Keys,sn:"OemCopy"},{a:2,n:"OemEnlW",is:!0,t:4,rt:$n[7].Keys,sn:"OemEnlW"},{a:2,n:"OemMinus",is:!0,t:4,rt:$n[7].Keys,sn:"OemMinus"},{a:2,n:"OemOpenBrackets",is:!0,t:4,rt:$n[7].Keys,sn:"OemOpenBrackets"},{a:2,n:"OemPeriod",is:!0,t:4,rt:$n[7].Keys,sn:"OemPeriod"},{a:2,n:"OemPipe",is:!0,t:4,rt:$n[7].Keys,sn:"OemPipe"},{a:2,n:"OemPlus",is:!0,t:4,rt:$n[7].Keys,sn:"OemPlus"},{a:2,n:"OemQuestion",is:!0,t:4,rt:$n[7].Keys,sn:"OemQuestion"},{a:2,n:"OemQuotes",is:!0,t:4,rt:$n[7].Keys,sn:"OemQuotes"},{a:2,n:"OemSemicolon",is:!0,t:4,rt:$n[7].Keys,sn:"OemSemicolon"},{a:2,n:"OemTilde",is:!0,t:4,rt:$n[7].Keys,sn:"OemTilde"},{a:2,n:"P",is:!0,t:4,rt:$n[7].Keys,sn:"P"},{a:2,n:"Pa1",is:!0,t:4,rt:$n[7].Keys,sn:"Pa1"},{a:2,n:"PageDown",is:!0,t:4,rt:$n[7].Keys,sn:"PageDown"},{a:2,n:"PageUp",is:!0,t:4,rt:$n[7].Keys,sn:"PageUp"},{a:2,n:"Pause",is:!0,t:4,rt:$n[7].Keys,sn:"Pause"},{a:2,n:"Play",is:!0,t:4,rt:$n[7].Keys,sn:"Play"},{a:2,n:"Print",is:!0,t:4,rt:$n[7].Keys,sn:"Print"},{a:2,n:"PrintScreen",is:!0,t:4,rt:$n[7].Keys,sn:"PrintScreen"},{a:2,n:"ProcessKey",is:!0,t:4,rt:$n[7].Keys,sn:"ProcessKey"},{a:2,n:"Q",is:!0,t:4,rt:$n[7].Keys,sn:"Q"},{a:2,n:"R",is:!0,t:4,rt:$n[7].Keys,sn:"R"},{a:2,n:"Right",is:!0,t:4,rt:$n[7].Keys,sn:"Right"},{a:2,n:"RightAlt",is:!0,t:4,rt:$n[7].Keys,sn:"RightAlt"},{a:2,n:"RightControl",is:!0,t:4,rt:$n[7].Keys,sn:"RightControl"},{a:2,n:"RightShift",is:!0,t:4,rt:$n[7].Keys,sn:"RightShift"},{a:2,n:"RightWindows",is:!0,t:4,rt:$n[7].Keys,sn:"RightWindows"},{a:2,n:"S",is:!0,t:4,rt:$n[7].Keys,sn:"S"},{a:2,n:"Scroll",is:!0,t:4,rt:$n[7].Keys,sn:"Scroll"},{a:2,n:"Select",is:!0,t:4,rt:$n[7].Keys,sn:"Select"},{a:2,n:"SelectMedia",is:!0,t:4,rt:$n[7].Keys,sn:"SelectMedia"},{a:2,n:"Separator",is:!0,t:4,rt:$n[7].Keys,sn:"Separator"},{a:2,n:"Sleep",is:!0,t:4,rt:$n[7].Keys,sn:"Sleep"},{a:2,n:"Space",is:!0,t:4,rt:$n[7].Keys,sn:"Space"},{a:2,n:"Subtract",is:!0,t:4,rt:$n[7].Keys,sn:"Subtract"},{a:2,n:"T",is:!0,t:4,rt:$n[7].Keys,sn:"T"},{a:2,n:"Tab",is:!0,t:4,rt:$n[7].Keys,sn:"Tab"},{a:2,n:"U",is:!0,t:4,rt:$n[7].Keys,sn:"U"},{a:2,n:"Up",is:!0,t:4,rt:$n[7].Keys,sn:"Up"},{a:2,n:"V",is:!0,t:4,rt:$n[7].Keys,sn:"V"},{a:2,n:"VolumeDown",is:!0,t:4,rt:$n[7].Keys,sn:"VolumeDown"},{a:2,n:"VolumeMute",is:!0,t:4,rt:$n[7].Keys,sn:"VolumeMute"},{a:2,n:"VolumeUp",is:!0,t:4,rt:$n[7].Keys,sn:"VolumeUp"},{a:2,n:"W",is:!0,t:4,rt:$n[7].Keys,sn:"W"},{a:2,n:"X",is:!0,t:4,rt:$n[7].Keys,sn:"X"},{a:2,n:"Y",is:!0,t:4,rt:$n[7].Keys,sn:"Y"},{a:2,n:"Z",is:!0,t:4,rt:$n[7].Keys,sn:"Z"},{a:2,n:"Zoom",is:!0,t:4,rt:$n[7].Keys,sn:"Zoom"}]}});$m($n[7].KeyState,function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Down",is:!0,t:4,rt:$n[7].KeyState,sn:"Down"},{a:2,n:"Up",is:!0,t:4,rt:$n[7].KeyState,sn:"Up"}]}});$m($n[8].App,function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Main",is:!0,t:8,sn:"Main",rt:$n[1].Void}]}});$m($n[8].Game1,function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Dispose",t:8,sn:"dispose",rt:$n[1].Void},{v:!0,a:3,n:"Dispose",t:8,pi:[{n:"disposing",pt:$n[1].Boolean,ps:0}],sn:"Dispose",rt:$n[1].Void,p:[$n[1].Boolean]},{ov:!0,a:3,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Draw",rt:$n[1].Void,p:[$n[0].GameTime]},{ov:!0,a:3,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[1].Void},{ov:!0,a:3,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[0].GameTime,ps:0}],sn:"Update",rt:$n[1].Void,p:[$n[0].GameTime]},{a:1,n:"disposedValue",t:4,rt:$n[1].Boolean,sn:"disposedValue"},{a:1,n:"graphics",t:4,rt:$n[0].GraphicsDeviceManager,sn:"graphics"},{a:1,n:"image",t:4,rt:$n[4].Texture2D,sn:"image"},{a:1,n:"pos",t:4,rt:$n[0].Vector2,sn:"pos"},{a:1,n:"spriteBatch",t:4,rt:$n[4].SpriteBatch,sn:"spriteBatch"}]}})});